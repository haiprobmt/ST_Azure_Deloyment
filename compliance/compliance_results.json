{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure the Encryption Provider Cipher\nWhen you enable etcd encryption, the following OpenShift API server and Kubernetes API server resources are encrypted:\n\n* Secrets\n* ConfigMaps\n* Routes\n* OAuth access tokens\n* OAuth authorize tokens\n\nWhen you enable etcd encryption, encryption keys are created. These keys are rotated on a weekly basis. You must have these keys in order to restore from an etcd backup.\n\nTo ensure the correct cipher, set the encryption type to aescbc or aesgcm in the apiserver object which configures the API server itself.\n\nspec:\n encryption:\n   type: aescbc\n\nFor more information, follow the relevant documentation ( https://docs.openshift.com/container-platform/latest/security/encrypting-etcd.html ).",
            "id": "xccdf_org.ssgproject.content_rule_api_server_encryption_provider_cipher",
            "instructions": "OpenShift supports encryption of data at rest of etcd datastore, but it is\nup to the customer to configure. The asecbc and aesgcm ciphers are\navailable for use within OpenShift. Keys are stored on the filesystem of\nthe master and automatically rotated. Run the following command to review\nthe Encrypted status condition for the OpenShift API server to verify that its\nresources were successfully encrypted:\n\n# encrypt the etcd datastore\n$ oc get openshiftapiserver -o=jsonpath='{range .items[0].status.conditions[?(@.type==\"Encrypted\")]}{.status}{\"\\n\"}{.reason}{\"\\n\"}{.message}{\"\\n\"}{end}'\n\nThe output shows EncryptionCompleted upon successful encryption.\nIf the output shows EncryptionInProgress this means that encryption is still in\nprogress. Wait a few minutes and try again.\nTo display the encryption configured, run the following command:\n$ oc get --raw  | jq\nIf the output does not list aescbc or aesgcm, the encryption is not configured correctly.\nIs it the case that \u003ctt\u003eaescbc\u003c/tt\u003e or \u003ctt\u003eaesgcm\u003c/tt\u003e is not configured as the encryption provider?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:37:58Z",
                    "compliance.openshift.io/rule": "api-server-encryption-provider-cipher"
                },
                "creationTimestamp": "2025-02-13T15:39:10Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "a230315d-3e4a-5b58-b00f-f96f1553e036",
                    "compliance.openshift.io/scan-name": "ocp4-cis",
                    "compliance.openshift.io/suite": "test-scan-ocp4"
                },
                "name": "ocp4-cis-api-server-encryption-provider-cipher",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "ocp4-cis",
                        "uid": "6c873842-99e8-46eb-b249-69337c588da1"
                    }
                ],
                "resourceVersion": "351726",
                "uid": "b3f8cde1-a0df-44ed-9ab9-c2e0ae22aaf7"
            },
            "rationale": "etcd is a highly available key-value store used by OpenShift deployments for persistent storage of all REST API objects. These objects are sensitive in nature and should be encrypted at rest to avoid any disclosures. Where etcd encryption is used, it is important to ensure that the appropriate set of encryption providers is used. Currently, aescbc and aesgcm are the only types supported by OCP.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure that the cluster's audit profile is properly set\nOpenShift can audit the details of requests made to the API server through the standard Kubernetes audit capabilities.\n\nIn OpenShift, auditing of the API Server is on by default. Audit provides a security-relevant chronological set of records documenting the sequence of activities that have affected system by individual users, administrators, or other components of the system. Audit works at the API server level, logging all requests coming to the server. Each audit log contains two entries:\n\nThe request line containing:\n\n* A Unique ID allowing to match the response line (see #2)\n* The source IP of the request\n* The HTTP method being invoked\n* The original user invoking the operation\n* The impersonated user for the operation (self meaning himself)\n* The impersonated group for the operation (lookup meaning user's group)\n* The namespace of the request or none\n* The URI as requested\n\nThe response line containing:\n\n* The aforementioned unique ID\n* The response code\n\nFor more information on how to configure the audit profile, please visit the documentation ( https://docs.openshift.com/container-platform/latest/security/audit-log-policy-config.html )",
            "id": "xccdf_org.ssgproject.content_rule_audit_profile_set",
            "instructions": "Run the following command to retrieve the current audit profile:\n$ oc get apiservers cluster -ojsonpath='{.spec.audit.profile}'\nMake sure the profile returned matches the one that should be used.\nIs it the case that The proper audit profile is not set?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:37:58Z",
                    "compliance.openshift.io/rule": "audit-profile-set"
                },
                "creationTimestamp": "2025-02-13T15:39:04Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "a230315d-3e4a-5b58-b00f-f96f1553e036",
                    "compliance.openshift.io/scan-name": "ocp4-cis",
                    "compliance.openshift.io/suite": "test-scan-ocp4"
                },
                "name": "ocp4-cis-audit-profile-set",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "ocp4-cis",
                        "uid": "6c873842-99e8-46eb-b249-69337c588da1"
                    }
                ],
                "resourceVersion": "351593",
                "uid": "75bb4c30-c9b9-4f65-8fb3-2e48ea908dbf"
            },
            "rationale": "Logging is an important detective control for all systems, to detect potential unauthorised access.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure that the Ingress Controller only makes use of Strong Cryptographic Ciphers\nEnsure that the Ingress Controller is configured to only use strong cryptographic ciphers.",
            "id": "xccdf_org.ssgproject.content_rule_kubelet_configure_tls_cipher_suites_ingresscontroller",
            "instructions": "Run the following command on the kubelet nodes(s):\noc get ingresscontrollers/default -n openshift-ingress-operator -o=jsonpath='{.status.tlsProfile.ciphers[:]}'\nThe output should only include relevant and modern TLS ciphers you deem\nacceptable for your cluster.\nIs it the case that Ingress controller TLS cipher suite configuration is incomplete or possibly insecure?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:37:58Z",
                    "compliance.openshift.io/rule": "kubelet-configure-tls-cipher-suites-ingresscontroller"
                },
                "creationTimestamp": "2025-02-13T15:39:09Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "a230315d-3e4a-5b58-b00f-f96f1553e036",
                    "compliance.openshift.io/scan-name": "ocp4-cis",
                    "compliance.openshift.io/suite": "test-scan-ocp4"
                },
                "name": "ocp4-cis-kubelet-configure-tls-cipher-suites-ingresscontroller",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "ocp4-cis",
                        "uid": "6c873842-99e8-46eb-b249-69337c588da1"
                    }
                ],
                "resourceVersion": "351706",
                "uid": "2b41bb84-511f-4b08-898c-cd048bca8d51"
            },
            "rationale": "TLS ciphers have had a number of known vulnerabilities and weaknesses, which can reduce the protection provided by them. By default Kubernetes supports a number of TLS ciphersuites including some that have security concerns, weakening the protection provided.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure the Encryption Provider Cipher\nWhen you enable etcd encryption, the following OpenShift API server and Kubernetes API server resources are encrypted:\n\n* Secrets\n* ConfigMaps\n* Routes\n* OAuth access tokens\n* OAuth authorize tokens\n\nWhen you enable etcd encryption, encryption keys are created. These keys are rotated on a weekly basis. You must have these keys in order to restore from an etcd backup.\n\nTo ensure the correct cipher, set the encryption type to aescbc or aesgcm in the apiserver object which configures the API server itself.\n\nspec:\n encryption:\n   type: aescbc\n\nFor more information, follow the relevant documentation ( https://docs.openshift.com/container-platform/latest/security/encrypting-etcd.html ).",
            "id": "xccdf_org.ssgproject.content_rule_api_server_encryption_provider_cipher",
            "instructions": "OpenShift supports encryption of data at rest of etcd datastore, but it is\nup to the customer to configure. The asecbc and aesgcm ciphers are\navailable for use within OpenShift. Keys are stored on the filesystem of\nthe master and automatically rotated. Run the following command to review\nthe Encrypted status condition for the OpenShift API server to verify that its\nresources were successfully encrypted:\n\n# encrypt the etcd datastore\n$ oc get openshiftapiserver -o=jsonpath='{range .items[0].status.conditions[?(@.type==\"Encrypted\")]}{.status}{\"\\n\"}{.reason}{\"\\n\"}{.message}{\"\\n\"}{end}'\n\nThe output shows EncryptionCompleted upon successful encryption.\nIf the output shows EncryptionInProgress this means that encryption is still in\nprogress. Wait a few minutes and try again.\nTo display the encryption configured, run the following command:\n$ oc get --raw  | jq\nIf the output does not list aescbc or aesgcm, the encryption is not configured correctly.\nIs it the case that \u003ctt\u003eaescbc\u003c/tt\u003e or \u003ctt\u003eaesgcm\u003c/tt\u003e is not configured as the encryption provider?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:09Z",
                    "compliance.openshift.io/rule": "api-server-encryption-provider-cipher"
                },
                "creationTimestamp": "2025-02-13T15:39:31Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "d625badc-92a1-5438-afd7-19526c26b03c",
                    "compliance.openshift.io/scan-name": "ocp4-moderate",
                    "compliance.openshift.io/suite": "test-scan-ocp4"
                },
                "name": "ocp4-moderate-api-server-encryption-provider-cipher",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "ocp4-moderate",
                        "uid": "15e54d65-d5b1-4bea-b1ff-3ea459aa9991"
                    }
                ],
                "resourceVersion": "352115",
                "uid": "8e394762-d71c-4a46-b96a-fd3df805e848"
            },
            "rationale": "etcd is a highly available key-value store used by OpenShift deployments for persistent storage of all REST API objects. These objects are sensitive in nature and should be encrypted at rest to avoid any disclosures. Where etcd encryption is used, it is important to ensure that the appropriate set of encryption providers is used. Currently, aescbc and aesgcm are the only types supported by OCP.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure that the cluster's audit profile is properly set\nOpenShift can audit the details of requests made to the API server through the standard Kubernetes audit capabilities.\n\nIn OpenShift, auditing of the API Server is on by default. Audit provides a security-relevant chronological set of records documenting the sequence of activities that have affected system by individual users, administrators, or other components of the system. Audit works at the API server level, logging all requests coming to the server. Each audit log contains two entries:\n\nThe request line containing:\n\n* A Unique ID allowing to match the response line (see #2)\n* The source IP of the request\n* The HTTP method being invoked\n* The original user invoking the operation\n* The impersonated user for the operation (self meaning himself)\n* The impersonated group for the operation (lookup meaning user's group)\n* The namespace of the request or none\n* The URI as requested\n\nThe response line containing:\n\n* The aforementioned unique ID\n* The response code\n\nFor more information on how to configure the audit profile, please visit the documentation ( https://docs.openshift.com/container-platform/latest/security/audit-log-policy-config.html )",
            "id": "xccdf_org.ssgproject.content_rule_audit_profile_set",
            "instructions": "Run the following command to retrieve the current audit profile:\n$ oc get apiservers cluster -ojsonpath='{.spec.audit.profile}'\nMake sure the profile returned matches the one that should be used.\nIs it the case that The proper audit profile is not set?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:09Z",
                    "compliance.openshift.io/rule": "audit-profile-set"
                },
                "creationTimestamp": "2025-02-13T15:39:29Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "d625badc-92a1-5438-afd7-19526c26b03c",
                    "compliance.openshift.io/scan-name": "ocp4-moderate",
                    "compliance.openshift.io/suite": "test-scan-ocp4"
                },
                "name": "ocp4-moderate-audit-profile-set",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "ocp4-moderate",
                        "uid": "15e54d65-d5b1-4bea-b1ff-3ea459aa9991"
                    }
                ],
                "resourceVersion": "352062",
                "uid": "b2655ecc-ec51-4ef2-99d5-bed99e31eaac"
            },
            "rationale": "Logging is an important detective control for all systems, to detect potential unauthorised access.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure that the Ingress Controller only makes use of Strong Cryptographic Ciphers\nEnsure that the Ingress Controller is configured to only use strong cryptographic ciphers.",
            "id": "xccdf_org.ssgproject.content_rule_kubelet_configure_tls_cipher_suites_ingresscontroller",
            "instructions": "Run the following command on the kubelet nodes(s):\noc get ingresscontrollers/default -n openshift-ingress-operator -o=jsonpath='{.status.tlsProfile.ciphers[:]}'\nThe output should only include relevant and modern TLS ciphers you deem\nacceptable for your cluster.\nIs it the case that Ingress controller TLS cipher suite configuration is incomplete or possibly insecure?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:09Z",
                    "compliance.openshift.io/rule": "kubelet-configure-tls-cipher-suites-ingresscontroller"
                },
                "creationTimestamp": "2025-02-13T15:39:31Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "d625badc-92a1-5438-afd7-19526c26b03c",
                    "compliance.openshift.io/scan-name": "ocp4-moderate",
                    "compliance.openshift.io/suite": "test-scan-ocp4"
                },
                "name": "ocp4-moderate-kubelet-configure-tls-cipher-suites-ingresscontroller",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "ocp4-moderate",
                        "uid": "15e54d65-d5b1-4bea-b1ff-3ea459aa9991"
                    }
                ],
                "resourceVersion": "352120",
                "uid": "f595c9d5-24dd-4028-9955-3c8db0f151cb"
            },
            "rationale": "TLS ciphers have had a number of known vulnerabilities and weaknesses, which can reduce the protection provided by them. By default Kubernetes supports a number of TLS ciphersuites including some that have security concerns, weakening the protection provided.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure OAuth tokens to expire after a set period of inactivity\nYou can configure OAuth tokens to expire after a set period of inactivity. By default, no token inactivity timeout is set.\n\nThe inactivity timeout can be either set in the OAuth server configuration or in any of the OAuth clients. The client settings override the OAuth server setting.\n\nTo set the OAuth server inactivity timeout, edit the OAuth server object: oc edit oauth cluster and set the.spec.tokenConfig.accessTokenInactivityTimeout parameter to the desired value:\n\napiVersion: config.openshift.io/v1\nkind: OAuth\nmetadata:\n...\nspec:\n  tokenConfig:\n    accessTokenInactivityTimeout: 10m0s\n\nPlease note that the OAuth server converts the value internally to a human-readable format,\nso that e.g. setting accessTokenInactivityTimeout=600s would be converted by the OAuth\nserver to accessTokenInactivityTimeout=10m0s.\n\nFor more information on configuring the OAuth server, consult the OpenShift documentation: https://docs.openshift.com/container-platform/4.7/authentication/configuring-oauth-clients.html\n\nTo edit the OAuth client inactivity timeout, edit the OAuth client object: oc edit oauthclient $clientname and set the top-level accessTokenInactivityTimeoutSeconds attribute.\n\napiVersion: oauth.openshift.io/v1\ngrantMethod: auto\nkind: OAuthClient\nmetadata:\n...\naccessTokenInactivityTimeoutSeconds: 600\n\nFor more information on configuring the OAuth clients, consult the OpenShift documentation: https://access.redhat.com/documentation/en-us/openshift_container_platform/4.7/html-single/authentication_and_authorization/index#oauth-token-inactivity-timeout_configuring-internal-oauth",
            "id": "xccdf_org.ssgproject.content_rule_oauth_or_oauthclient_inactivity_timeout",
            "instructions": "To check if the OAuth server timeout is configured, run the following command:\noc get oauth cluster -ojsonpath='{.spec.tokenConfig.accessTokenInactivityTimeout}'\nthe output should return a timeout value.\n\nTo check if the OAuth client timeout is configured, run the following command:\noc get oauthclients -ojson | jq -r '.items[] | { accessTokenInactivityTimeoutSeconds: .accessTokenInactivityTimeoutSeconds}'\nthe output should return a timeout value per client.\nIs it the case that OAuth server or client inactivity timeout is not configured?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:09Z",
                    "compliance.openshift.io/rule": "oauth-or-oauthclient-inactivity-timeout"
                },
                "creationTimestamp": "2025-02-13T15:39:23Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "d625badc-92a1-5438-afd7-19526c26b03c",
                    "compliance.openshift.io/scan-name": "ocp4-moderate",
                    "compliance.openshift.io/suite": "test-scan-ocp4"
                },
                "name": "ocp4-moderate-oauth-or-oauthclient-inactivity-timeout",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "ocp4-moderate",
                        "uid": "15e54d65-d5b1-4bea-b1ff-3ea459aa9991"
                    }
                ],
                "resourceVersion": "351919",
                "uid": "984e8dd9-36c6-4349-85fb-80528efef5ec"
            },
            "rationale": "Terminating an idle session within a short time period reduces the window of opportunity for unauthorized personnel to take control of a session that has been left unattended.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure OAuth tokens to expire after a set period of inactivity\nYou can configure OAuth tokens to have have a custom duration. By default, the tokens are valid for 24 hours (86400 seconds).\n\nThe maximum age can be either set in the OAuth server configuration or in any of the OAuth clients. The client settings override the OAuth server setting.\n\nTo set the OAuth server token max age, edit the OAuth server object: oc edit oauth cluster and set the.spec.tokenConfig.accessTokenMaxAgeSeconds parameter to the desired value:\n\napiVersion: config.openshift.io/v1\nkind: OAuth\nmetadata:\n...\nspec:\n  tokenConfig:\n    accessTokenMaxAgeSeconds: 28800\n\nTo set the OAuth client token max age, edit the OAuth client object: oc edit oauthclient $clientname and set the top-level accessTokenMaxAgeSeconds attribute.\n\napiVersion: oauth.openshift.io/v1\ngrantMethod: auto\nkind: OAuthClient\nmetadata:\n...\naccessTokenMaxAgeSeconds: 28800\n\nFor more information on configuring the OAuth server, consult the OpenShift documentation: https://docs.openshift.com/container-platform/4.7/authentication/configuring-internal-oauth.html",
            "id": "xccdf_org.ssgproject.content_rule_oauth_or_oauthclient_token_maxage",
            "instructions": "To check if the OAuth server token max age is configured, run the following command:\noc get oauth cluster -ojsonpath='{.spec.tokenConfig.accessTokenMaxAgeSeconds}'\nthe output should return a timeout value\n\nTo check if the OAuth client token max age is configured, run the following command:\noc get oauthclients -ojson | jq -r '.items[] | { accessTokenMaxAgeSeconds: .accessTokenMaxAgeSeconds}'\nthe output should return a timeout value per client.\nIs it the case that OAuth client token max age is not configured?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:09Z",
                    "compliance.openshift.io/rule": "oauth-or-oauthclient-token-maxage"
                },
                "creationTimestamp": "2025-02-13T15:39:25Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "d625badc-92a1-5438-afd7-19526c26b03c",
                    "compliance.openshift.io/scan-name": "ocp4-moderate",
                    "compliance.openshift.io/suite": "test-scan-ocp4"
                },
                "name": "ocp4-moderate-oauth-or-oauthclient-token-maxage",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "ocp4-moderate",
                        "uid": "15e54d65-d5b1-4bea-b1ff-3ea459aa9991"
                    }
                ],
                "resourceVersion": "351957",
                "uid": "bde01189-ab36-448e-a20a-a1ed53281bac"
            },
            "rationale": "Setting a token maximum age to a shorter time period reduces the window of opportunity for unauthorized personnel to take control of the session.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - chmod\nAt a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S chmod -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S chmod -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S chmod -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S chmod -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_chmod",
            "instructions": "To determine if the system is configured to audit calls to the\nchmod system call, run the following command:\n$ sudo grep \"chmod\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-chmod"
                },
                "creationTimestamp": "2025-02-13T15:41:50Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-chmod",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353431",
                "uid": "2754011f-de0f-4890-ad0b-c0d0ee0f75cf"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - chown\nAt a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S chown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S chown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S chown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S chown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_chown",
            "instructions": "To determine if the system is configured to audit calls to the\nchown system call, run the following command:\n$ sudo grep \"chown\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-chown"
                },
                "creationTimestamp": "2025-02-13T15:42:08Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-chown",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354184",
                "uid": "60d1eac5-8efe-42ae-8d2a-cfa1eec53460"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - fchmod\nAt a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S fchmod -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fchmod -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S fchmod -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fchmod -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fchmod",
            "instructions": "To determine if the system is configured to audit calls to the\nfchmod system call, run the following command:\n$ sudo grep \"fchmod\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-fchmod"
                },
                "creationTimestamp": "2025-02-13T15:42:05Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-fchmod",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354032",
                "uid": "9c337494-156e-4573-ba77-c2414b2a9373"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - fchmodat\nAt a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S fchmodat -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fchmodat -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S fchmodat -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fchmodat -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fchmodat",
            "instructions": "To determine if the system is configured to audit calls to the\nfchmodat system call, run the following command:\n$ sudo grep \"fchmodat\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-fchmodat"
                },
                "creationTimestamp": "2025-02-13T15:41:54Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-fchmodat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353611",
                "uid": "0dfaed08-b4bb-4b3c-94e0-09550ac96e1a"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - fchown\nAt a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S fchown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fchown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S fchown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fchown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fchown",
            "instructions": "To determine if the system is configured to audit calls to the\nfchown system call, run the following command:\n$ sudo grep \"fchown\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-fchown"
                },
                "creationTimestamp": "2025-02-13T15:41:57Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-fchown",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353733",
                "uid": "8fe9d7f2-a5d7-4ea3-8b0d-24c86dfa3ded"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - fchownat\nAt a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S fchownat -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fchownat -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S fchownat -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fchownat -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fchownat",
            "instructions": "To determine if the system is configured to audit calls to the\nfchownat system call, run the following command:\n$ sudo grep \"fchownat\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-fchownat"
                },
                "creationTimestamp": "2025-02-13T15:42:02Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-fchownat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353907",
                "uid": "3555aa16-d72c-43cb-a580-2fc170db944f"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - fremovexattr\nAt a minimum, the audit system should collect file permission changes for all users and root.\n\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S fremovexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fremovexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S fremovexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fremovexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fremovexattr",
            "instructions": "To determine if the system is configured to audit calls to the\nfremovexattr system call, run the following command:\n$ sudo grep \"fremovexattr\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-fremovexattr"
                },
                "creationTimestamp": "2025-02-13T15:42:03Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-fremovexattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353958",
                "uid": "7a2eac56-b7b1-4cd1-80ce-c4a5da3cf9bf"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - fsetxattr\nAt a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S fsetxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fsetxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S fsetxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S fsetxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fsetxattr",
            "instructions": "To determine if the system is configured to audit calls to the\nfsetxattr system call, run the following command:\n$ sudo grep \"fsetxattr\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-fsetxattr"
                },
                "creationTimestamp": "2025-02-13T15:41:56Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-fsetxattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353662",
                "uid": "0ba4a4b4-da5b-4d80-8e25-65a7413d73e6"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - lchown\nAt a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S lchown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S lchown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S lchown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S lchown -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lchown",
            "instructions": "To determine if the system is configured to audit calls to the\nlchown system call, run the following command:\n$ sudo grep \"lchown\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-lchown"
                },
                "creationTimestamp": "2025-02-13T15:41:58Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-lchown",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353761",
                "uid": "a5eb5e3a-c728-41f2-9ef6-170b65ae9074"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - lremovexattr\nAt a minimum, the audit system should collect file permission changes for all users and root.\n\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S lremovexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S lremovexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S lremovexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S lremovexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lremovexattr",
            "instructions": "To determine if the system is configured to audit calls to the\nlremovexattr system call, run the following command:\n$ sudo grep \"lremovexattr\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-lremovexattr"
                },
                "creationTimestamp": "2025-02-13T15:41:53Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-lremovexattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353579",
                "uid": "3ce4786b-5e2e-4365-8d3b-ea720da207ea"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - lsetxattr\nAt a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S lsetxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S lsetxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S lsetxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S lsetxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr",
            "instructions": "To determine if the system is configured to audit calls to the\nlsetxattr system call, run the following command:\n$ sudo grep \"lsetxattr\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-lsetxattr"
                },
                "creationTimestamp": "2025-02-13T15:41:58Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-lsetxattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353765",
                "uid": "1b4042c3-5cfc-4436-93db-343500aa9d5e"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - removexattr\nAt a minimum, the audit system should collect file permission changes for all users and root.\n\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S removexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S removexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S removexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S removexattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr",
            "instructions": "To determine if the system is configured to audit calls to the\nremovexattr system call, run the following command:\n$ sudo grep \"removexattr\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-removexattr"
                },
                "creationTimestamp": "2025-02-13T15:41:51Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-removexattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353490",
                "uid": "6628cfb6-c727-4448-b2fb-a27cccda5877"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Discretionary Access Controls - setxattr\nAt a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S setxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S setxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S setxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S setxattr -F auid\u003e=1000 -F auid!=unset -F key=perm_mod",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr",
            "instructions": "To determine if the system is configured to audit calls to the\nsetxattr system call, run the following command:\n$ sudo grep \"setxattr\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-dac-modification-setxattr"
                },
                "creationTimestamp": "2025-02-13T15:42:06Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-dac-modification-setxattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354067",
                "uid": "a56a23ae-8956-4308-bc03-1260997efa8c"
            },
            "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via open syscall - /etc/group\nThe audit system should collect write events to /etc/group file for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S open -F a1\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S open -F a1\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S open -F a1\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_group_open",
            "instructions": "To determine if the system is configured to audit calls to the\nopen system call, run the following command:\n$ sudo grep \"open\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-group-open"
                },
                "creationTimestamp": "2025-02-13T15:42:07Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-group-open",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354134",
                "uid": "d9e302ef-51ad-4f5c-b6f2-75afe026ff9c"
            },
            "rationale": "Creation of groups through direct edition of /etc/group could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S open -F a1\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via open_by_handle_at syscall - /etc/group\nThe audit system should collect write events to /etc/group file for all group and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_group_open_by_handle_at",
            "instructions": "To determine if the system is configured to audit calls to the\nopen_by_handle_at system call, run the following command:\n$ sudo grep \"open_by_handle_at\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-group-open-by-handle-at"
                },
                "creationTimestamp": "2025-02-13T15:41:53Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-group-open-by-handle-at",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353559",
                "uid": "ce89d7b2-cf0e-4477-a1ed-099dea5635d8"
            },
            "rationale": "Creation of groups through direct edition of /etc/group could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via openat syscall - /etc/group\nThe audit system should collect write events to /etc/group file for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S openat -F a2\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S openat -F a2\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S openat -F a2\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_group_openat",
            "instructions": "To determine if the system is configured to audit calls to the\nopenat system call, run the following command:\n$ sudo grep \"openat\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-group-openat"
                },
                "creationTimestamp": "2025-02-13T15:41:57Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-group-openat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353727",
                "uid": "5f10b1f0-0a1a-429c-84ee-db3f52e1b80b"
            },
            "rationale": "Creation of groups through direct edition of /etc/group could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2\u002603 -F path=/etc/group -F auid\u003e=1000 -F auid!=unset -F key=modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via open syscall - /etc/gshadow\nThe audit system should collect write events to /etc/gshadow file for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S open -F a1\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S open -F a1\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S open -F a1\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_gshadow_open",
            "instructions": "To determine if the system is configured to audit calls to the\nopen system call, run the following command:\n$ sudo grep \"open\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-gshadow-open"
                },
                "creationTimestamp": "2025-02-13T15:42:02Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-gshadow-open",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353932",
                "uid": "dd99c5c0-7aaf-4410-80a4-bbb05c69d71c"
            },
            "rationale": "Creation of users through direct edition of /etc/gshadow could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S open -F a1\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via open_by_handle_at syscall - /etc/gshadow\nThe audit system should collect write events to /etc/gshadow file for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_gshadow_open_by_handle_at",
            "instructions": "To determine if the system is configured to audit calls to the\nopen_by_handle_at system call, run the following command:\n$ sudo grep \"open_by_handle_at\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-gshadow-open-by-handle-at"
                },
                "creationTimestamp": "2025-02-13T15:42:01Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-gshadow-open-by-handle-at",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353862",
                "uid": "e55fe571-eb9d-4f07-b447-3234002a5a91"
            },
            "rationale": "Creation of users through direct edition of /etc/gshadow could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via openat syscall - /etc/gshadow\nThe audit system should collect write events to /etc/gshadow file for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S openat -F a2\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S openat -F a2\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S openat -F a2\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_gshadow_openat",
            "instructions": "To determine if the system is configured to audit calls to the\nopenat system call, run the following command:\n$ sudo grep \"openat\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-gshadow-openat"
                },
                "creationTimestamp": "2025-02-13T15:41:52Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-gshadow-openat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353522",
                "uid": "5bd72d5e-4b8c-4728-9773-99ccd8d05b72"
            },
            "rationale": "Creation of users through direct edition of /etc/gshadow could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2\u002603 -F path=/etc/gshadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via open syscall - /etc/passwd\nThe audit system should collect write events to /etc/passwd file for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S open -F a1\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S open -F a1\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S open -F a1\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_passwd_open",
            "instructions": "To determine if the system is configured to audit calls to the\nopen system call, run the following command:\n$ sudo grep \"open\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-passwd-open"
                },
                "creationTimestamp": "2025-02-13T15:41:52Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-passwd-open",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353543",
                "uid": "22d48c9c-d44d-4d6e-87ce-0b219fd849dd"
            },
            "rationale": "Creation of users through direct edition of /etc/passwd could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S open -F a1\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via open_by_handle_at syscall - /etc/passwd\nThe audit system should collect write events to /etc/passwd file for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_passwd_open_by_handle_at",
            "instructions": "To determine if the system is configured to audit calls to the\nopen_by_handle_at system call, run the following command:\n$ sudo grep \"open_by_handle_at\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-passwd-open-by-handle-at"
                },
                "creationTimestamp": "2025-02-13T15:41:49Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-passwd-open-by-handle-at",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353404",
                "uid": "24798d8e-88c8-4d5f-9763-00a071981f44"
            },
            "rationale": "Creation of users through direct edition of /etc/passwd could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via openat syscall - /etc/passwd\nThe audit system should collect write events to /etc/passwd file for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S openat -F a2\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S openat -F a2\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S openat -F a2\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_passwd_openat",
            "instructions": "To determine if the system is configured to audit calls to the\nopenat system call, run the following command:\n$ sudo grep \"openat\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-passwd-openat"
                },
                "creationTimestamp": "2025-02-13T15:41:50Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-passwd-openat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353449",
                "uid": "67385fdf-4677-433f-81d4-e58dbabcc4a1"
            },
            "rationale": "Creation of users through direct edition of /etc/passwd could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2\u002603 -F path=/etc/passwd -F auid\u003e=1000 -F auid!=unset -F key=modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via open syscall - /etc/shadow\nThe audit system should collect write events to /etc/shadow file for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S open -F a1\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S open -F a1\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S open -F a1\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_shadow_open",
            "instructions": "To determine if the system is configured to audit calls to the\nopen system call, run the following command:\n$ sudo grep \"open\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-shadow-open"
                },
                "creationTimestamp": "2025-02-13T15:41:59Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-shadow-open",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353786",
                "uid": "d9f3d8ae-19b7-4df0-8384-9da6e853c269"
            },
            "rationale": "Creation of users through direct edition of /etc/shadow could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S open,openat,open_by_handle_at -F a1\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via open_by_handle_at syscall - /etc/shadow\nThe audit system should collect write events to /etc/shadow file for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_shadow_open_by_handle_at",
            "instructions": "To determine if the system is configured to audit calls to the\nopen_by_handle_at system call, run the following command:\n$ sudo grep \"open_by_handle_at\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-shadow-open-by-handle-at"
                },
                "creationTimestamp": "2025-02-13T15:41:48Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-shadow-open-by-handle-at",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353374",
                "uid": "3f42b418-2445-4964-9303-a734861a53be"
            },
            "rationale": "Creation of users through direct edition of /etc/shadow could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S open,openat,open_by_handle_at -F a2\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information via openat syscall - /etc/shadow\nThe audit system should collect write events to /etc/shadow file for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S openat -F a2\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S openat -F a2\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S openat -F a2\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_etc_shadow_openat",
            "instructions": "To determine if the system is configured to audit calls to the\nopenat system call, run the following command:\n$ sudo grep \"openat\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-etc-shadow-openat"
                },
                "creationTimestamp": "2025-02-13T15:41:52Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-etc-shadow-openat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353509",
                "uid": "0e55ab8b-34a7-49ee-86c5-e7f3448ab485"
            },
            "rationale": "Creation of users through direct edition of /etc/shadow could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S open,openat,open_by_handle_at -F a2\u002603 -F path=/etc/shadow -F auid\u003e=1000 -F auid!=unset -F key=user-modify"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Any Attempts to Run chcon\nAt a minimum, the audit system should collect any execution attempt of the chcon command for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/chcon -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F path=/usr/bin/chcon -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_execution_chcon",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"chcon\" command with the following command:\n\n$ sudo auditctl -l | grep chcon\n\n-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid\u003e=1000 -F auid!=unset -k perm_mod\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-execution-chcon"
                },
                "creationTimestamp": "2025-02-13T15:42:07Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-execution-chcon",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354139",
                "uid": "04105a05-07bb-4aac-9860-ed59877f4c7f"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Any Attempts to Run restorecon\nAt a minimum, the audit system should collect any execution attempt of the restorecon command for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/sbin/restorecon -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F path=/usr/sbin/restorecon -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_execution_restorecon",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"restorecon\" command with the following command:\n\n$ sudo auditctl -l | grep restorecon\n\n-a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-restorecon\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-execution-restorecon"
                },
                "creationTimestamp": "2025-02-13T15:41:46Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-execution-restorecon",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353246",
                "uid": "fc161f22-c40f-467b-8e7f-8ae73cd32499"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Any Attempts to Run semanage\nAt a minimum, the audit system should collect any execution attempt of the semanage command for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/sbin/semanage -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F path=/usr/sbin/semanage -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_execution_semanage",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"semanage\" command with the following command:\n\n$ sudo auditctl -l | grep semanage\n\n-a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-unix-update\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-execution-semanage"
                },
                "creationTimestamp": "2025-02-13T15:41:56Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-execution-semanage",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353668",
                "uid": "b98e4a83-9df2-4aa9-ae91-2b11ce921d07"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Any Attempts to Run setfiles\nAt a minimum, the audit system should collect any execution attempt of the setfiles command for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/sbin/setfiles -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F path=/usr/sbin/setfiles -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_execution_setfiles",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"setfiles\" command with the following command:\n\n$ sudo auditctl -l | grep setfiles\n\n-a always,exit -F path=/usr/sbin/setfiles -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-unix-update\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-execution-setfiles"
                },
                "creationTimestamp": "2025-02-13T15:41:46Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-execution-setfiles",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353259",
                "uid": "ea5b4da4-960c-49d7-9550-7fa84f94d3f8"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Any Attempts to Run setsebool\nAt a minimum, the audit system should collect any execution attempt of the setsebool command for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/sbin/setsebool -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F path=/usr/sbin/setsebool -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_execution_setsebool",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"setsebool\" command with the following command:\n\n$ sudo auditctl -l | grep setsebool\n\n-a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-execution-setsebool"
                },
                "creationTimestamp": "2025-02-13T15:42:00Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-execution-setsebool",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353841",
                "uid": "01f1d534-85c1-4a3b-8650-68c603292bda"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Any Attempts to Run seunshare\nAt a minimum, the audit system should collect any execution attempt of the seunshare command for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/sbin/seunshare -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F path=/usr/sbin/seunshare -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_execution_seunshare",
            "instructions": "To verify that execution of the command is being audited, run the following command:\n$ sudo grep \"path=/usr/sbin/seunshare\" /etc/audit/audit.rules /etc/audit/rules.d/*\nThe output should return something similar to:\n-a always,exit -F path=/usr/sbin/seunshare -F auid\u003e=1000 -F auid!=unset -F key=privileged\nIs it the case that ?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-execution-seunshare"
                },
                "creationTimestamp": "2025-02-13T15:41:49Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-execution-seunshare",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353397",
                "uid": "cb1eb993-4a83-4a73-b6a2-b040491ad8d6"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects File Deletion Events by User - rename\nAt a minimum, the audit system should collect file deletion events for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d , setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S rename -F auid\u003e=1000 -F auid!=unset -F key=delete\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file, setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S rename -F auid\u003e=1000 -F auid!=unset -F key=delete",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_file_deletion_events_rename",
            "instructions": "To determine if the system is configured to audit calls to the\nrename system call, run the following command:\n$ sudo grep \"rename\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-file-deletion-events-rename"
                },
                "creationTimestamp": "2025-02-13T15:41:50Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-file-deletion-events-rename",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353454",
                "uid": "b147f0d2-5152-469b-8623-09d260d23f06"
            },
            "rationale": "Auditing file deletions will create an audit trail for files that are removed from the system. The audit trail could aid in system troubleshooting, as well as, detecting malicious processes that attempt to delete log files to conceal their presence.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects File Deletion Events by User - renameat\nAt a minimum, the audit system should collect file deletion events for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d , setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S renameat -F auid\u003e=1000 -F auid!=unset -F key=delete\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file, setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S renameat -F auid\u003e=1000 -F auid!=unset -F key=delete",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_file_deletion_events_renameat",
            "instructions": "To determine if the system is configured to audit calls to the\nrenameat system call, run the following command:\n$ sudo grep \"renameat\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-file-deletion-events-renameat"
                },
                "creationTimestamp": "2025-02-13T15:41:55Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-file-deletion-events-renameat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353635",
                "uid": "68762cdf-4934-4bd4-bad0-29349aee4f4c"
            },
            "rationale": "Auditing file deletions will create an audit trail for files that are removed from the system. The audit trail could aid in system troubleshooting, as well as, detecting malicious processes that attempt to delete log files to conceal their presence.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects File Deletion Events by User - rmdir\nAt a minimum, the audit system should collect file deletion events for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d , setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S rmdir -F auid\u003e=1000 -F auid!=unset -F key=delete\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file, setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S rmdir -F auid\u003e=1000 -F auid!=unset -F key=delete",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_file_deletion_events_rmdir",
            "instructions": "To determine if the system is configured to audit calls to the\nrmdir system call, run the following command:\n$ sudo grep \"rmdir\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-file-deletion-events-rmdir"
                },
                "creationTimestamp": "2025-02-13T15:41:51Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-file-deletion-events-rmdir",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353472",
                "uid": "8357509b-22d7-4127-96aa-9f71e0e5c082"
            },
            "rationale": "Auditing file deletions will create an audit trail for files that are removed from the system. The audit trail could aid in system troubleshooting, as well as, detecting malicious processes that attempt to delete log files to conceal their presence.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects File Deletion Events by User - unlink\nAt a minimum, the audit system should collect file deletion events for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d , setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S unlink -F auid\u003e=1000 -F auid!=unset -F key=delete\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file, setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S unlink -F auid\u003e=1000 -F auid!=unset -F key=delete",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_file_deletion_events_unlink",
            "instructions": "To determine if the system is configured to audit calls to the\nunlink system call, run the following command:\n$ sudo grep \"unlink\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-file-deletion-events-unlink"
                },
                "creationTimestamp": "2025-02-13T15:41:51Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-file-deletion-events-unlink",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353494",
                "uid": "76dd7802-0c93-416c-a47f-4e141f4cc76b"
            },
            "rationale": "Auditing file deletions will create an audit trail for files that are removed from the system. The audit trail could aid in system troubleshooting, as well as, detecting malicious processes that attempt to delete log files to conceal their presence.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects File Deletion Events by User - unlinkat\nAt a minimum, the audit system should collect file deletion events for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d , setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S unlinkat -F auid\u003e=1000 -F auid!=unset -F key=delete\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file, setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S unlinkat -F auid\u003e=1000 -F auid!=unset -F key=delete",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_file_deletion_events_unlinkat",
            "instructions": "To determine if the system is configured to audit calls to the\nunlinkat system call, run the following command:\n$ sudo grep \"unlinkat\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-file-deletion-events-unlinkat"
                },
                "creationTimestamp": "2025-02-13T15:41:55Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-file-deletion-events-unlinkat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353639",
                "uid": "d1904e58-b4e8-448d-8157-a1874950746f"
            },
            "rationale": "Auditing file deletions will create an audit trail for files that are removed from the system. The audit trail could aid in system troubleshooting, as well as, detecting malicious processes that attempt to delete log files to conceal their presence.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Make the auditd Configuration Immutable\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d in order to make the auditd configuration immutable:\n\n-e 2\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file in order to make the auditd configuration immutable:\n\n-e 2\n\nWith this setting, a reboot will be required to change any audit rules.",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_immutable",
            "instructions": "Verify the audit system prevents unauthorized changes with the following command:\n\n$ sudo grep \"^\\s*[^#]\" /etc/audit/audit.rules | tail -1\n-e 2\n\nIs it the case that the audit system is not set to be immutable by adding the \"-e 2\" option to the end of \"/etc/audit/audit.rules\"?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-immutable"
                },
                "creationTimestamp": "2025-02-13T15:42:00Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-immutable",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353829",
                "uid": "08a3814f-00a9-49e6-99d4-7d767d043362"
            },
            "rationale": "Making the audit configuration immutable prevents accidental as well as malicious modification of the audit rules, although it may be problematic if legitimate changes are needed during system operation.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on Kernel Module Unloading - delete_module\nTo capture kernel module unloading events, use following line, setting ARCH to either b32 for 32-bit system, or having two lines for both b32 and b64 in case your system is 64-bit:\n\n-a always,exit -F arch= ARCH -S delete_module -F key=modules\n\nPlace to add the line depends on a way auditd daemon is configured. If it is configured to use the augenrules program (the default), add the line to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility, add the line to file /etc/audit/audit.rules.",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_kernel_module_loading_delete",
            "instructions": "To determine if the system is configured to audit calls to the\ndelete_module system call, run the following command:\n$ sudo grep \"delete_module\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-kernel-module-loading-delete"
                },
                "creationTimestamp": "2025-02-13T15:42:02Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-kernel-module-loading-delete",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353921",
                "uid": "657d1883-974f-4417-b56b-bf11777764fc"
            },
            "rationale": "The removal of kernel modules can be used to alter the behavior of the kernel and potentially introduce malicious code into kernel space. It is important to have an audit trail of modules that have been introduced into the kernel.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on Kernel Module Loading and Unloading - finit_module\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d to capture kernel module loading and unloading events, setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch= ARCH -S finit_module -F key=modules\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file in order to capture kernel module loading and unloading events, setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch= ARCH -S finit_module -F key=modules",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_kernel_module_loading_finit",
            "instructions": "To determine if the system is configured to audit calls to the\nfinit_module system call, run the following command:\n$ sudo grep \"finit_module\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-kernel-module-loading-finit"
                },
                "creationTimestamp": "2025-02-13T15:41:50Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-kernel-module-loading-finit",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353442",
                "uid": "40e31258-a575-4579-bed2-ad29f7696677"
            },
            "rationale": "The addition/removal of kernel modules can be used to alter the behavior of the kernel and potentially introduce malicious code into kernel space. It is important to have an audit trail of modules that have been introduced into the kernel.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on Kernel Module Loading - init_module\nTo capture kernel module loading events, use following line, setting ARCH to either b32 for 32-bit system, or having two lines for both b32 and b64 in case your system is 64-bit:\n\n-a always,exit -F arch= ARCH -S init_module -F key=modules\n\nPlace to add the line depends on a way auditd daemon is configured. If it is configured to use the augenrules program (the default), add the line to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility, add the line to file /etc/audit/audit.rules.",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_kernel_module_loading_init",
            "instructions": "To determine if the system is configured to audit calls to the\ninit_module system call, run the following command:\n$ sudo grep \"init_module\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-kernel-module-loading-init"
                },
                "creationTimestamp": "2025-02-13T15:42:04Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-kernel-module-loading-init",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353995",
                "uid": "23e9149e-0284-4bf6-9fea-d4a76a307fa6"
            },
            "rationale": "The addition of kernel modules can be used to alter the behavior of the kernel and potentially introduce malicious code into kernel space. It is important to have an audit trail of modules that have been introduced into the kernel.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Attempts to Alter Logon and Logout Events - faillock\nThe audit system already collects login information for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d in order to watch for attempted manual edits of files involved in storing logon events:\n\n-w /var/run/faillock -p wa -k logins\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file in order to watch for unattempted manual edits of files involved in storing logon events:\n\n-w /var/run/faillock -p wa -k logins",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_login_events_faillock",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates audit records for all account creations, modifications, disabling, and termination events that affect \"/etc/security/opasswd\" with the following command:\n\n$ sudo auditctl -l | grep\n\n-w  -p wa -k logins\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-login-events-faillock"
                },
                "creationTimestamp": "2025-02-13T15:42:05Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-login-events-faillock",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354017",
                "uid": "ab730bd1-d8be-4622-b2aa-8e7d5c20c2fb"
            },
            "rationale": "Manual editing of these files may indicate nefarious activity, such as an attacker attempting to remove evidence of an intrusion.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Attempts to Alter Logon and Logout Events - lastlog\nThe audit system already collects login information for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d in order to watch for attempted manual edits of files involved in storing logon events:\n\n-w /var/log/lastlog -p wa -k logins\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file in order to watch for unattempted manual edits of files involved in storing logon events:\n\n-w /var/log/lastlog -p wa -k logins",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_login_events_lastlog",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates audit records for all account creations, modifications, disabling, and termination events that affect \"/var/log/lastlog\" with the following command:\n\n$ sudo auditctl -l | grep /var/log/lastlog\n\n-w /var/log/lastlog -p wa -k logins\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-login-events-lastlog"
                },
                "creationTimestamp": "2025-02-13T15:41:53Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-login-events-lastlog",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353563",
                "uid": "0d72b1cc-51a5-44cd-a081-715c5fa81d36"
            },
            "rationale": "Manual editing of these files may indicate nefarious activity, such as an attacker attempting to remove evidence of an intrusion.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Attempts to Alter Logon and Logout Events - tallylog\nThe audit system already collects login information for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d in order to watch for attempted manual edits of files involved in storing logon events:\n\n-w /var/log/tallylog -p wa -k logins\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file in order to watch for unattempted manual edits of files involved in storing logon events:\n\n-w /var/log/tallylog -p wa -k logins",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_login_events_tallylog",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates audit records for all account creations, modifications, disabling, and termination events that affect \"/var/log/tallylog\" with the following command:\n\n$ sudo auditctl -l | grep /var/log/tallylog\n\n-w /var/log/tallylog -p wa -k logins\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-login-events-tallylog"
                },
                "creationTimestamp": "2025-02-13T15:41:50Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-login-events-tallylog",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353464",
                "uid": "2856cf76-c721-40dd-9f2d-d9c2cd202302"
            },
            "rationale": "Manual editing of these files may indicate nefarious activity, such as an attacker attempting to remove evidence of an intrusion.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Mandatory Access Controls\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-w /etc/selinux/ -p wa -k MAC-policy\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-w /etc/selinux/ -p wa -k MAC-policy",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification",
            "instructions": "To determine if the system is configured to audit changes to its SELinux\nconfiguration files, run the following command:\n$ sudo auditctl -l | grep \"dir=/etc/selinux\"\nIf the system is configured to watch for changes to its SELinux\nconfiguration, a line should be returned (including\nperm=wa indicating permissions that are watched).\nIs it the case that the system is not configured to audit attempts to change the MAC policy?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-mac-modification"
                },
                "creationTimestamp": "2025-02-13T15:42:02Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-mac-modification",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353904",
                "uid": "c3601725-04a5-47e1-a6f7-e37ec73f7c70"
            },
            "rationale": "The system's mandatory access policy (SELinux) should not be arbitrarily changed by anything other than administrator action. All changes to MAC policy should be audited.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on Exporting to Media (successful)\nAt a minimum, the audit system should collect media exportation events for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d , setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S mount -F auid\u003e=1000 -F auid!=unset -F key=export\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file, setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S mount -F auid\u003e=1000 -F auid!=unset -F key=export",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_media_export",
            "instructions": "To determine if the system is configured to audit calls to the\nmount system call, run the following command:\n$ sudo grep \"mount\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-media-export"
                },
                "creationTimestamp": "2025-02-13T15:41:56Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-media-export",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353687",
                "uid": "a00a1b11-1eef-4703-9360-c1aa5779e3fa"
            },
            "rationale": "The unauthorized exportation of data to external media could result in an information leak where classified information, Privacy Act information, and intellectual property could be lost. An audit trail should be created each time a filesystem is mounted to help identify and guard against information loss.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify the System's Network Environment\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d , setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S sethostname,setdomainname -F key=audit_rules_networkconfig_modification\n-w /etc/issue -p wa -k audit_rules_networkconfig_modification\n-w /etc/issue.net -p wa -k audit_rules_networkconfig_modification\n-w /etc/hosts -p wa -k audit_rules_networkconfig_modification\n-w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, setting ARCH to either b32 or b64 as appropriate for your system:\n\n-a always,exit -F arch=ARCH -S sethostname,setdomainname -F key=audit_rules_networkconfig_modification\n-w /etc/issue -p wa -k audit_rules_networkconfig_modification\n-w /etc/issue.net -p wa -k audit_rules_networkconfig_modification\n-w /etc/hosts -p wa -k audit_rules_networkconfig_modification\n-w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification",
            "instructions": "To determine if the system is configured to audit changes to its network configuration,\nrun the following command:\nauditctl -l | grep -E '(/etc/issue|/etc/issue.net|/etc/hosts|/etc/sysconfig/network)'\n\nIf the system is configured to watch for network configuration changes, a line should be returned for\neach file specified (and perm=wa should be indicated for each).\nIs it the case that the system is not configured to audit changes of the network configuration?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-networkconfig-modification"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-networkconfig-modification",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353286",
                "uid": "b33eeb42-69bf-42fe-ad7f-c6029e4ea1d7"
            },
            "rationale": "The network environment should not be modified by anything other than administrator action. Any change to network parameters should be audited.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - at\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/at -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/at -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_at",
            "instructions": "To verify that auditing of privileged command use is configured, run the\nfollowing command:\n$ sudo grep '\\bat\\b' /etc/audit/audit.rules /etc/audit/rules.d/*\nIt should return a relevant line in the audit rules.\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-at"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-at",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353333",
                "uid": "0cfb0a06-81c7-484c-9a12-4517066bda74"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - chage\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/chage -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/chage -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_chage",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"chage\" command with the following command:\n\n$ sudo auditctl -l | grep chage\n\n-a always,exit -F path=/usr/bin/chage -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-chage\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-chage"
                },
                "creationTimestamp": "2025-02-13T15:41:54Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-chage",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353622",
                "uid": "81c52e24-b93e-4b30-9278-09fb123de5c5"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - chsh\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/chsh -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/chsh -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_chsh",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"chsh\" command with the following command:\n\n$ sudo auditctl -l | grep chsh\n\n-a always,exit -F path=/usr/bin/chsh -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-chsh\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-chsh"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-chsh",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353305",
                "uid": "e3f48e42-5b96-47e4-b0a4-a6be2764d135"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - crontab\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/crontab -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/crontab -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_crontab",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"crontab\" command with the following command:\n\n$ sudo auditctl -l | grep crontab\n\n-a always,exit -F path=/usr/bin/crontab -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-crontab\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-crontab"
                },
                "creationTimestamp": "2025-02-13T15:41:57Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-crontab",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353713",
                "uid": "f50f2e0c-2282-4240-9046-dff5bf47d60c"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - gpasswd\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_gpasswd",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"gpasswd\" command with the following command:\n\n$ sudo auditctl -l | grep gpasswd\n\n-a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-gpasswd\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-gpasswd"
                },
                "creationTimestamp": "2025-02-13T15:41:53Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-gpasswd",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353582",
                "uid": "56680189-5d08-4c5b-834e-bbef52434554"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - mount\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/mount -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/mount -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_mount",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"mount\" command with the following command:\n\n$ sudo auditctl -l | grep mount\n\n-a always,exit -F path=/usr/bin/mount -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-mount\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-mount"
                },
                "creationTimestamp": "2025-02-13T15:41:53Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-mount",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353547",
                "uid": "191d1821-4876-4224-881b-f3d5a3ee1732"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - newgidmap\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/newgidmap -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/newgidmap -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_newgidmap",
            "instructions": "To verify that auditing of privileged command use is configured, run the\nfollowing command:\n$ sudo grep newgidmap /etc/audit/audit.rules /etc/audit/rules.d/*\nIt should return a relevant line in the audit rules.\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-newgidmap"
                },
                "creationTimestamp": "2025-02-13T15:42:03Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-newgidmap",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353963",
                "uid": "8cc70347-3247-4d9b-b809-1af6046d698e"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - newgrp\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_newgrp",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"newgrp\" command with the following command:\n\n$ sudo auditctl -l | grep newgrp\n\n-a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-newgrp\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-newgrp"
                },
                "creationTimestamp": "2025-02-13T15:41:46Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-newgrp",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353264",
                "uid": "b01db283-adf6-4308-b3cc-ab9ef6c64a5e"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - newuidmap\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/newuidmap -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/newuidmap -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_newuidmap",
            "instructions": "To verify that auditing of privileged command use is configured, run the\nfollowing command:\n$ sudo grep newuidmap /etc/audit/audit.rules /etc/audit/rules.d/*\nIt should return a relevant line in the audit rules.\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-newuidmap"
                },
                "creationTimestamp": "2025-02-13T15:42:03Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-newuidmap",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353967",
                "uid": "01529edc-19df-4bb6-9010-72325330444a"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - pam_timestamp_check\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/sbin/pam_timestamp_check\n-F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/sbin/pam_timestamp_check\n-F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_pam_timestamp_check",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"pam_timestamp_check\" command with the following command:\n\n$ sudo auditctl -l | grep pam_timestamp_check\n\n-a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-pam_timestamp_check\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-pam-timestamp-check"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-pam-timestamp-check",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353309",
                "uid": "bfc16b57-2b62-4742-a5a0-2976ecbe3607"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - passwd\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/passwd -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/passwd -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_passwd",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"passwd\" command with the following command:\n\n$ sudo auditctl -l | grep passwd\n\n-a always,exit -F path=/usr/bin/passwd -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-passwd\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-passwd"
                },
                "creationTimestamp": "2025-02-13T15:42:01Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-passwd",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353885",
                "uid": "29ad6e4f-c107-41a7-b7a7-8de5d90d879d"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - postdrop\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/sbin/postdrop -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/sbin/postdrop -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_postdrop",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"postdrop\" command with the following command:\n\n$ sudo auditctl -l | grep postdrop\n\n-a always,exit -F path=/usr/bin/postdrop -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-postdrop\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-postdrop"
                },
                "creationTimestamp": "2025-02-13T15:41:59Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-postdrop",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353814",
                "uid": "eafc7df4-f53b-4916-aa40-0fd96ee497e1"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - postqueue\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/sbin/postqueue -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/sbin/postqueue -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_postqueue",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"postqueue\" command with the following command:\n\n$ sudo auditctl -l | grep postqueue\n\n-a always,exit -F path=/usr/bin/postqueue -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-postqueue\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-postqueue"
                },
                "creationTimestamp": "2025-02-13T15:42:03Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-postqueue",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353970",
                "uid": "7059a427-79c3-418d-98db-3bfdc6e329f0"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - pt_chown\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/libexec/pt_chown -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/libexec/pt_chown -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_pt_chown",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"pt_chown\" command with the following command:\n\n$ sudo auditctl -l | grep pt_chown\n\n-a always,exit -F path=/usr/libexec/pt_chown -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-pt_chown\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-pt-chown"
                },
                "creationTimestamp": "2025-02-13T15:42:00Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-pt-chown",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353850",
                "uid": "3594b5be-56e3-4c24-ac3e-10ca65bccc36"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - ssh-keysign\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_ssh_keysign",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"ssh-keysign\" command with the following command:\n\n$ sudo auditctl -l | grep ssh-keysign\n\n-a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-ssh-keysign\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-ssh-keysign"
                },
                "creationTimestamp": "2025-02-13T15:42:08Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-ssh-keysign",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354151",
                "uid": "7f77e459-c2ff-433c-b8cd-f5a7bf29442c"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - su\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/su -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/su -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_su",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"su\" command with the following command:\n\n$ sudo auditctl -l | grep su\n\n-a always,exit -F path=/usr/bin/su -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-su\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-su"
                },
                "creationTimestamp": "2025-02-13T15:42:00Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-su",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353818",
                "uid": "fc5b18cd-3863-47ba-9467-8093fe8001e4"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - sudo\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/sudo -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/sudo -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_sudo",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"sudo\" command with the following command:\n\n$ sudo auditctl -l | grep sudo\n\n-a always,exit -F path=/usr/bin/sudo -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-sudo\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-sudo"
                },
                "creationTimestamp": "2025-02-13T15:42:07Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-sudo",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354124",
                "uid": "560519a7-e6f8-41c8-8fdd-ebd71f00f4f3"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - sudoedit\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/sudoedit -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/sudoedit -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_sudoedit",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"sudoedit\" command with the following command:\n\n$ sudo auditctl -l | grep sudoedit\n\n-a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-sudoedit\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-sudoedit"
                },
                "creationTimestamp": "2025-02-13T15:41:52Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-sudoedit",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353513",
                "uid": "cca642a0-248c-4d7c-bc5d-d82293218439"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - umount\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/bin/umount -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/bin/umount -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_umount",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"umount\" command with the following command:\n\n$ sudo auditctl -l | grep umount\n\n-a always,exit -F path=/usr/bin/umount -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-umount\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-umount"
                },
                "creationTimestamp": "2025-02-13T15:41:53Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-umount",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353566",
                "uid": "ea10f4b9-1d48-46a0-9bde-797e0e1cdee9"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - unix_chkpwd\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_unix_chkpwd",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"unix_chkpwd\" command with the following command:\n\n$ sudo auditctl -l | grep unix_chkpwd\n\n-a always,exit -F path=/usr/bin/unix_chkpwd -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-unix_chkpwd\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-unix-chkpwd"
                },
                "creationTimestamp": "2025-02-13T15:41:52Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-unix-chkpwd",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353526",
                "uid": "90d487ca-612f-430f-adef-615afa9b668d"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - userhelper\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/sbin/userhelper -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/sbin/userhelper -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_userhelper",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to audit the execution of the \"userhelper\" command with the following command:\n\n$ sudo auditctl -l | grep userhelper\n\n-a always,exit -F path=/usr/bin/userhelper -F perm=x -F auid\u003e=1000 -F auid!=unset -k privileged-userhelper\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-userhelper"
                },
                "creationTimestamp": "2025-02-13T15:41:58Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-userhelper",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353772",
                "uid": "fa796fec-6bef-4a86-af22-2a4b3b36e76a"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects Information on the Use of Privileged Commands - usernetctl\nAt a minimum, the audit system should collect the execution of privileged commands for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add a line of the following form to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F path=/usr/sbin/usernetctl -F auid\u003e=1000 -F auid!=unset -F key=privileged\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add a line of the following form to /etc/audit/audit.rules :\n\n-a always,exit -F path=/usr/sbin/usernetctl -F auid\u003e=1000 -F auid!=unset -F key=privileged",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands_usernetctl",
            "instructions": "To verify that auditing of privileged command use is configured, run the\nfollowing command:\n$ sudo grep usernetctl /etc/audit/audit.rules /etc/audit/rules.d/*\nIt should return a relevant line in the audit rules.\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-privileged-commands-usernetctl"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-privileged-commands-usernetctl",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353278",
                "uid": "31ee2d19-2a34-4309-aec4-6ef96d454632"
            },
            "rationale": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse and identify the risk from insider and advanced persistent threats.\n\nPrivileged programs are subject to escalation-of-privilege attacks, which attempt to subvert their normal role of providing some necessary but limited capability. As such, motivation exists to monitor these programs for unusual activity.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Attempts to Alter Process and Session Initiation Information\nThe audit system already collects process information for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d in order to watch for attempted manual edits of files involved in storing such process information:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/btmp -p wa -k session\n-w /var/log/wtmp -p wa -k session\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file in order to watch for attempted manual edits of files involved in storing such process information:\n\n-w /var/run/utmp -p wa -k session\n-w /var/log/btmp -p wa -k session\n-w /var/log/wtmp -p wa -k session",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_session_events",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-session-events"
                },
                "creationTimestamp": "2025-02-13T15:42:02Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-session-events",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353935",
                "uid": "132c4c6b-0bba-43fc-a4ab-82e8dc328f75"
            },
            "rationale": "Manual editing of these files may indicate nefarious activity, such as an attacker attempting to remove evidence of an intrusion.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure auditd Collects System Administrator Actions\nAt a minimum, the audit system should collect administrator actions for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-w /etc/sudoers -p wa -k actions\n-w /etc/sudoers.d/ -p wa -k actions\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-w /etc/sudoers -p wa -k actions\n-w /etc/sudoers.d/ -p wa -k actions",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_sysadmin_actions",
            "instructions": "To verify that auditing is configured for system administrator actions, run the following command:\n$ sudo auditctl -l | grep \"watch=/etc/sudoers\\|watch=/etc/sudoers.d\\|-w /etc/sudoers\\|-w /etc/sudoers.d\"\nIs it the case that there is not output?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-sysadmin-actions"
                },
                "creationTimestamp": "2025-02-13T15:41:57Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-sysadmin-actions",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353705",
                "uid": "17891bf9-2205-47dc-9667-64322c59f521"
            },
            "rationale": "The actions taken by system administrators should be audited to keep a record of what was executed on the system, as well as, for accountability purposes.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record attempts to alter time through adjtimex\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S adjtimex -F key=audit_time_rules\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S adjtimex -F key=audit_time_rules\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S adjtimex -F key=audit_time_rules\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S adjtimex -F key=audit_time_rules\n\nThe -k option allows for the specification of a key in string form that can be used for better reporting capability through ausearch and aureport. Multiple system calls can be defined on the same line to save space if desired, but is not required. See an example of multiple combined syscalls:\n\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=audit_time_rules",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_time_adjtimex",
            "instructions": "To determine if the system is configured to audit calls to the\nadjtimex system call, run the following command:\n$ sudo grep \"adjtimex\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-time-adjtimex"
                },
                "creationTimestamp": "2025-02-13T15:41:58Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-time-adjtimex",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353750",
                "uid": "2c684dfe-29c5-418a-93e3-da5476eaf689"
            },
            "rationale": "Arbitrary changes to the system time can be used to obfuscate nefarious activities in log files, as well as to confuse network services that are highly dependent upon an accurate system time (such as sshd). All changes to the system time should be audited.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Attempts to Alter Time Through clock_settime\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change\n\nThe -k option allows for the specification of a key in string form that can be used for better reporting capability through ausearch and aureport. Multiple system calls can be defined on the same line to save space if desired, but is not required. See an example of multiple combined syscalls:\n\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=audit_time_rules",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_time_clock_settime",
            "instructions": "To determine if the system is configured to audit calls to the\nclock_settime system call, run the following command:\n$ sudo grep \"clock_settime\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-time-clock-settime"
                },
                "creationTimestamp": "2025-02-13T15:41:55Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-time-clock-settime",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353645",
                "uid": "b7f1c95b-f881-4aa7-a9e0-f650baf9708a"
            },
            "rationale": "Arbitrary changes to the system time can be used to obfuscate nefarious activities in log files, as well as to confuse network services that are highly dependent upon an accurate system time (such as sshd). All changes to the system time should be audited.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record attempts to alter time through settimeofday\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S settimeofday -F key=audit_time_rules\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S settimeofday -F key=audit_time_rules\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S settimeofday -F key=audit_time_rules\n\nIf the system is 64 bit then also add the following line:\n\n-a always,exit -F arch=b64 -S settimeofday -F key=audit_time_rules\n\nThe -k option allows for the specification of a key in string form that can be used for better reporting capability through ausearch and aureport. Multiple system calls can be defined on the same line to save space if desired, but is not required. See an example of multiple combined syscalls:\n\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=audit_time_rules",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_time_settimeofday",
            "instructions": "To determine if the system is configured to audit calls to the\nsettimeofday system call, run the following command:\n$ sudo grep \"settimeofday\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-time-settimeofday"
                },
                "creationTimestamp": "2025-02-13T15:41:59Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-time-settimeofday",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353780",
                "uid": "ca3dfd68-07bb-49a7-a089-fb6c1709285b"
            },
            "rationale": "Arbitrary changes to the system time can be used to obfuscate nefarious activities in log files, as well as to confuse network services that are highly dependent upon an accurate system time (such as sshd). All changes to the system time should be audited.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Attempts to Alter Time Through stime\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d for both 32 bit and 64 bit systems:\n\n-a always,exit -F arch=b32 -S stime -F key=audit_time_rules\n\nSince the 64 bit version of the \"stime\" system call is not defined in the audit lookup table, the corresponding \"-F arch=b64\" form of this rule is not expected to be defined on 64 bit systems (the aforementioned \"-F arch=b32\" stime rule form itself is sufficient for both 32 bit and 64 bit systems). If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file for both 32 bit and 64 bit systems:\n\n-a always,exit -F arch=b32 -S stime -F key=audit_time_rules\n\nSince the 64 bit version of the \"stime\" system call is not defined in the audit lookup table, the corresponding \"-F arch=b64\" form of this rule is not expected to be defined on 64 bit systems (the aforementioned \"-F arch=b32\" stime rule form itself is sufficient for both 32 bit and 64 bit systems). The -k option allows for the specification of a key in string form that can be used for better reporting capability through ausearch and aureport. Multiple system calls can be defined on the same line to save space if desired, but is not required. See an example of multiple combined system calls:\n\n-a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=audit_time_rules",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_time_stime",
            "instructions": "If the system is not configured to audit time changes, this is a finding.\nIf the system is 64-bit only, this is not applicable\nocil: |\nTo determine if the system is configured to audit calls to the\nstime system call, run the following command:\n$ sudo grep \"stime\" /etc/audit/audit.*\nIf the system is configured to audit this activity, it will return a line.\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-time-stime"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-time-stime",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353290",
                "uid": "4a53dea1-1447-47ce-bebd-7b48a586e645"
            },
            "rationale": "Arbitrary changes to the system time can be used to obfuscate nefarious activities in log files, as well as to confuse network services that are highly dependent upon an accurate system time (such as sshd). All changes to the system time should be audited.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Attempts to Alter the localtime File\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-w /etc/localtime -p wa -k audit_time_rules\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file:\n\n-w /etc/localtime -p wa -k audit_time_rules\n\nThe -k option allows for the specification of a key in string form that can be used for better reporting capability through ausearch and aureport and should always be used.",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_time_watch_localtime",
            "instructions": "To determine if the system is configured to audit attempts to\nalter time via the /etc/localtime file, run the following\ncommand:\n$ sudo auditctl -l | grep \"watch=/etc/localtime\"\nIf the system is configured to audit this activity, it will return a line.\nIs it the case that the system is not configured to audit time changes?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-time-watch-localtime"
                },
                "creationTimestamp": "2025-02-13T15:42:03Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-time-watch-localtime",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353977",
                "uid": "0f4f0b22-8d33-419e-97b0-88ee1b80ebb9"
            },
            "rationale": "Arbitrary changes to the system time can be used to obfuscate nefarious activities in log files, as well as to confuse network services that are highly dependent upon an accurate system time (such as sshd). All changes to the system time should be audited.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Permission Changes to Files - chmod\nThe audit system should collect unsuccessful file permission change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S chmod -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S chmod -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S chmod -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S chmod -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_chmod",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the chmod system call, run the following command:\n$ sudo grep \"chmod\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-chmod"
                },
                "creationTimestamp": "2025-02-13T15:41:51Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-chmod",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353498",
                "uid": "70dfbb4a-3665-47db-b786-4f2b4795aa3e"
            },
            "rationale": "Unsuccessful attempts to change permissions of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Ownership Changes to Files - chown\nThe audit system should collect unsuccessful file ownership change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S chown -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S chown -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S chown -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S chown -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_chown",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the chown system call, run the following command:\n$ sudo grep \"chown\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-chown"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-chown",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353324",
                "uid": "7c119314-4939-40b2-8c56-b3fd68a3021f"
            },
            "rationale": "Unsuccessful attempts to change ownership of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Access Attempts to Files - creat\nAt a minimum, the audit system should collect unauthorized file accesses for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_creat",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to use the creat system call.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r creat /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep creat /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-creat"
                },
                "creationTimestamp": "2025-02-13T15:42:03Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-creat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353940",
                "uid": "d5432ce6-c94a-4cbd-a5f3-21701ef9ec93"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Permission Changes to Files - fchmod\nThe audit system should collect unsuccessful file permission change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S fchmod -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S fchmod -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S fchmod -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S fchmod -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_fchmod",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the fchmod system call, run the following command:\n$ sudo grep \"fchmod\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-fchmod"
                },
                "creationTimestamp": "2025-02-13T15:42:05Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-fchmod",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354049",
                "uid": "84a5caad-e9b0-4157-b418-1899827d4a98"
            },
            "rationale": "Unsuccessful attempts to change permissions of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Permission Changes to Files - fchmodat\nThe audit system should collect unsuccessful file permission change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S fchmodat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S fchmodat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S fchmodat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S fchmodat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_fchmodat",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the fchmodat system call, run the following command:\n$ sudo grep \"fchmodat\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-fchmodat"
                },
                "creationTimestamp": "2025-02-13T15:41:59Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-fchmodat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353775",
                "uid": "dba47946-6b80-4d80-9df9-2f1606a37213"
            },
            "rationale": "Unsuccessful attempts to change permissions of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Ownership Changes to Files - fchown\nThe audit system should collect unsuccessful file ownership change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S fchown -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S fchown -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S fchown -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S fchown -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_fchown",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the fchown system call, run the following command:\n$ sudo grep \"fchown\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-fchown"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-fchown",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353328",
                "uid": "1e3dd76d-eb5e-48a0-9c73-9af84718f0c6"
            },
            "rationale": "Unsuccessful attempts to change ownership of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Ownership Changes to Files - fchownat\nThe audit system should collect unsuccessful file ownership change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S fchownat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S fchownat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S fchownat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S fchownat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_fchownat",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the fchownat system call, run the following command:\n$ sudo grep \"fchownat\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-fchownat"
                },
                "creationTimestamp": "2025-02-13T15:41:59Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-fchownat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353806",
                "uid": "3d513cf3-3e28-412e-90a4-7d9035cff252"
            },
            "rationale": "Unsuccessful attempts to change ownership of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Permission Changes to Files - fremovexattr\nThe audit system should collect unsuccessful file permission change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S fremovexattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S fremovexattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S fremovexattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S fremovexattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_fremovexattr",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the fremovexattr system call, run the following command:\n$ sudo grep \"fremovexattr\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-fremovexattr"
                },
                "creationTimestamp": "2025-02-13T15:41:49Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-fremovexattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353420",
                "uid": "5a9f0ef7-b4bf-4ac9-a767-490f84cdbfc3"
            },
            "rationale": "Unsuccessful attempts to change permissions of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Permission Changes to Files - fsetxattr\nThe audit system should collect unsuccessful file permission change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S fsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S fsetxattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S fsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S fsetxattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_fsetxattr",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the fsetxattr system call, run the following command:\n$ sudo grep \"fsetxattr\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-fsetxattr"
                },
                "creationTimestamp": "2025-02-13T15:42:02Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-fsetxattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353912",
                "uid": "b4232e3b-15e7-4881-a91f-d93ed3bb6094"
            },
            "rationale": "Unsuccessful attempts to change permissions of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Access Attempts to Files - ftruncate\nAt a minimum, the audit system should collect unauthorized file accesses for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_ftruncate",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to use the ftruncate system call.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r ftruncate /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep ftruncate /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-ftruncate"
                },
                "creationTimestamp": "2025-02-13T15:41:48Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-ftruncate",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353358",
                "uid": "e0e65cab-ff35-44f6-a8c3-a14d15994ef9"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Ownership Changes to Files - lchown\nThe audit system should collect unsuccessful file ownership change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S lchown -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S lchown -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S lchown -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S lchown -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_lchown",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the lchown system call, run the following command:\n$ sudo grep \"lchown\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-lchown"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-lchown",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353272",
                "uid": "49e75249-2fff-4238-a9a5-8f6580925afa"
            },
            "rationale": "Unsuccessful attempts to change ownership of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Permission Changes to Files - lremovexattr\nThe audit system should collect unsuccessful file permission change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S lremovexattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S lremovexattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S lremovexattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S lremovexattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_lremovexattr",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the lremovexattr system call, run the following command:\n$ sudo grep \"lremovexattr\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-lremovexattr"
                },
                "creationTimestamp": "2025-02-13T15:42:03Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-lremovexattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353945",
                "uid": "9c1dc122-71e7-4815-91e2-16e2e2109a7f"
            },
            "rationale": "Unsuccessful attempts to change permissions of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Permission Changes to Files - lsetxattr\nThe audit system should collect unsuccessful file permission change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S lsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S lsetxattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S lsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S lsetxattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_lsetxattr",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the lsetxattr system call, run the following command:\n$ sudo grep \"lsetxattr\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-lsetxattr"
                },
                "creationTimestamp": "2025-02-13T15:41:54Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-lsetxattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353587",
                "uid": "07b5a51c-cfca-45e5-8c1f-faff2169af9c"
            },
            "rationale": "Unsuccessful attempts to change permissions of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Access Attempts to Files - open\nAt a minimum, the audit system should collect unauthorized file accesses for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_open",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to use the open system call.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r open /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep open /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-open"
                },
                "creationTimestamp": "2025-02-13T15:42:06Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-open",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354070",
                "uid": "3074acdd-5521-470a-aca4-27e485e655de"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Access Attempts to Files - open_by_handle_at\nAt a minimum, the audit system should collect unauthorized file accesses for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_open_by_handle_at",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to use the open_by_handle_at system call.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r open_by_handle_at /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep open_by_handle_at /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-open-by-handle-at"
                },
                "creationTimestamp": "2025-02-13T15:41:51Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-open-by-handle-at",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353502",
                "uid": "a100a2ec-27b9-4167-8f5e-2be32bbaf627"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Creation Attempts to Files - open_by_handle_at O_CREAT\nThe audit system should collect unauthorized file accesses for all users and root. The open_by_handle_at syscall can be used to create new files when O_CREAT flag is specified. The following auidt rules will asure that unsuccessful attempts to create a file via open_by_handle_at syscall are collected. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the rules below to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the rules below to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to create files using the open_by_handle_at system call with O_CREAT flag.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r open_by_handle_at /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep open_by_handle_at /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-open-by-handle-at-o-creat"
                },
                "creationTimestamp": "2025-02-13T15:42:00Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-open-by-handle-at-o-creat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353845",
                "uid": "06c33a5f-704a-4d9b-bcf7-0a88cb764403"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Modification Attempts to Files - open_by_handle_at O_TRUNC_WRITE\nThe audit system should collect detailed unauthorized file accesses for all users and root. The open_by_handle_at syscall can be used to modify files if called for write operation of with O_TRUNC_WRITE flag. The following auidt rules will asure that unsuccessful attempts to modify a file via open_by_handle_at syscall are collected. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the rules below to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the rules below to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to modify files using the open_by_handle_at system call with O_TRUNC_WRITE flag.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r open_by_handle_at /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep open_by_handle_at /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b32 -S open_by_handle_at -F a2\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S open_by_handle_at -F a2\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-open-by-handle-at-o-trunc-write"
                },
                "creationTimestamp": "2025-02-13T15:42:08Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-open-by-handle-at-o-trunc-write",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354145",
                "uid": "e7ae3f2f-a330-47d0-a0c5-156e918b1805"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Creation Attempts to Files - open O_CREAT\nThe audit system should collect unauthorized file accesses for all users and root. The open syscall can be used to create new files when O_CREAT flag is specified. The following auidt rules will asure that unsuccessful attempts to create a file via open syscall are collected. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the rules below to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the rules below to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S open -F a1\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b32 -S open -F a1\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S open -F a1\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S open -F a1\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_open_o_creat",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to create files using the open system call with O_CREAT flag.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r open /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep open /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S open -F a1\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b32 -S open -F a1\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S open -F a1\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S open -F a1\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-open-o-creat"
                },
                "creationTimestamp": "2025-02-13T15:41:46Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-open-o-creat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353250",
                "uid": "158930df-f6e2-42c8-bcba-737c1f1db848"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S open -F a1\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Modification Attempts to Files - open O_TRUNC_WRITE\nThe audit system should collect detailed unauthorized file accesses for all users and root. The open syscall can be used to modify files if called for write operation of with O_TRUNC_WRITE flag. The following auidt rules will asure that unsuccessful attempts to modify a file via open syscall are collected. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the rules below to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the rules below to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S open -F a1\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification\n-a always,exit -F arch=b32 -S open -F a1\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S open -F a1\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification\n-a always,exit -F arch=b64 -S open -F a1\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_open_o_trunc_write",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to modify files using the open system call with O_TRUNC_WRITE flag.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r open /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep open /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S open -F a1\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b32 -S open -F a1\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S open -F a1\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S open -F a1\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-open-o-trunc-write"
                },
                "creationTimestamp": "2025-02-13T15:42:01Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-open-o-trunc-write",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353880",
                "uid": "a403be7e-0043-4e46-ada8-043fe792ac4f"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S open -F a1\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Access Attempts to Files - openat\nAt a minimum, the audit system should collect unauthorized file accesses for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_openat",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to use the openat system call.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r openat /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep openat /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-openat"
                },
                "creationTimestamp": "2025-02-13T15:42:01Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-openat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353868",
                "uid": "72eb4b87-a386-4d2d-92df-a7457f38e1f6"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Creation Attempts to Files - openat O_CREAT\nThe audit system should collect unauthorized file accesses for all users and root. The openat syscall can be used to create new files when O_CREAT flag is specified. The following auidt rules will asure that unsuccessful attempts to create a file via openat syscall are collected. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the rules below to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the rules below to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S openat -F a2\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b32 -S openat -F a2\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S openat -F a2\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S openat -F a2\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_openat_o_creat",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to create files using the openat system call with O_CREAT flag.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r openat /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep openat /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S openat -F a2\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b32 -S openat -F a2\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S openat -F a2\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S openat -F a2\u00260100 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-openat-o-creat"
                },
                "creationTimestamp": "2025-02-13T15:42:08Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-openat-o-creat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354149",
                "uid": "08940ecd-4950-4804-822f-e3a343dbb1d8"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2\u00260100 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Modification Attempts to Files - openat O_TRUNC_WRITE\nThe audit system should collect detailed unauthorized file accesses for all users and root. The openat syscall can be used to modify files if called for write operation of with O_TRUNC_WRITE flag. The following auidt rules will asure that unsuccessful attempts to modify a file via openat syscall are collected. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the rules below to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the rules below to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S openat -F a2\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification\n-a always,exit -F arch=b32 -S openat -F a2\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S openat -F a2\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification\n-a always,exit -F arch=b64 -S openat -F a2\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_openat_o_trunc_write",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to modify files using the openat system call with O_TRUNC_WRITE flag.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r openat /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep openat /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S openat -F a2\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b32 -S openat -F a2\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S openat -F a2\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\n-a always,exit -F arch=b64 -S openat -F a2\u002601003 -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-create\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-openat-o-trunc-write"
                },
                "creationTimestamp": "2025-02-13T15:42:01Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-openat-o-trunc-write",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353893",
                "uid": "f44858bc-c0bc-463b-8d19-618375fe44ba"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2\u002601003 -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-modification"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Permission Changes to Files - removexattr\nThe audit system should collect unsuccessful file permission change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S removexattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S removexattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S removexattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S removexattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_removexattr",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the removexattr system call, run the following command:\n$ sudo grep \"removexattr\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-removexattr"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-removexattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353275",
                "uid": "64af0ce6-45cf-47f7-8d75-0d5d54170b9c"
            },
            "rationale": "Unsuccessful attempts to change permissions of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Delete Attempts to Files - rename\nThe audit system should collect unsuccessful file deletion attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S rename -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n-a always,exit -F arch=b32 -S rename -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S rename -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n-a always,exit -F arch=b64 -S rename -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_rename",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to use the rename system call.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r rename /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep rename /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S rename -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b64 -S rename -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b32 -S rename -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b64 -S rename -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-rename"
                },
                "creationTimestamp": "2025-02-13T15:41:58Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-rename",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353768",
                "uid": "0f7257cd-1cb8-4a5e-ae93-5d4df744f132"
            },
            "rationale": "Unsuccessful attempts to delete files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S unlink,unlinkat,rename,renameat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-delete"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Delete Attempts to Files - renameat\nThe audit system should collect unsuccessful file deletion attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S renameat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n-a always,exit -F arch=b32 -S renameat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S renameat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n-a always,exit -F arch=b64 -S renameat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_renameat",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to use the renameat system call.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r renameat /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep renameat /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S renameat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b64 -S renameat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b32 -S renameat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b64 -S renameat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-renameat"
                },
                "creationTimestamp": "2025-02-13T15:41:50Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-renameat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353436",
                "uid": "b1a66f37-722b-460a-a549-bc02316db838"
            },
            "rationale": "Unsuccessful attempts to delete files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S unlink,unlinkat,rename,renameat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-delete"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Permission Changes to Files - setxattr\nThe audit system should collect unsuccessful file permission change attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S setxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b32 -S setxattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S setxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change\n-a always,exit -F arch=b64 -S setxattr -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_setxattr",
            "instructions": "To determine if the system is configured to audit unsuccessful calls\nto the setxattr system call, run the following command:\n$ sudo grep \"setxattr\" /etc/audit.*\nIf the system is configured to audit this activity, it will return a line.\n\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-setxattr"
                },
                "creationTimestamp": "2025-02-13T15:42:06Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-setxattr",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354053",
                "uid": "a1d35681-0f1a-4e56-ad26-03b325180f49"
            },
            "rationale": "Unsuccessful attempts to change permissions of files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the audit rule checks a system call independently of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-perm-change"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Access Attempts to Files - truncate\nAt a minimum, the audit system should collect unauthorized file accesses for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d :\n\n-a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file:\n\n-a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=access\n-a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=access",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_truncate",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to use the truncate system call.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r truncate /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep truncate /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\n-a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k access\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-truncate"
                },
                "creationTimestamp": "2025-02-13T15:41:50Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-truncate",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353460",
                "uid": "7639fb6f-5166-4d7b-b7ee-eeb42c65eb3d"
            },
            "rationale": "Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping these system calls with others as identifying earlier in this guide is more efficient."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Delete Attempts to Files - unlink\nThe audit system should collect unsuccessful file deletion attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S unlink -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n-a always,exit -F arch=b32 -S unlink -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S unlink -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n-a always,exit -F arch=b64 -S unlink -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_unlink",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to use the unlink system call.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r unlink /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep unlink /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S unlink -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b64 -S unlink -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b32 -S unlink -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b64 -S unlink -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-unlink"
                },
                "creationTimestamp": "2025-02-13T15:42:01Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-unlink",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353872",
                "uid": "257b26b4-ee77-44e5-ba29-778dcaf45f4a"
            },
            "rationale": "Unsuccessful attempts to delete files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S unlink,unlinkat,rename,renameat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-delete"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Unsuccessful Delete Attempts to Files - unlinkat\nThe audit system should collect unsuccessful file deletion attempts for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file.\n\n-a always,exit -F arch=b32 -S unlinkat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n-a always,exit -F arch=b32 -S unlinkat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n\nIf the system is 64 bit then also add the following lines:\n\n-a always,exit -F arch=b64 -S unlinkat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete\n-a always,exit -F arch=b64 -S unlinkat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -F key=unsuccessful-delete",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_unlinkat",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates an audit record for unsuccessful attempts to use the unlinkat system call.\n\nIf the auditd daemon is configured to use the \"augenrules\" program to to read audit rules during daemon startup (the default), run the following command:\n\n$ sudo grep -r unlinkat /etc/audit/rules.d\n\nIf the auditd daemon is configured to use the \"auditctl\" utility to read audit rules during daemon startup, run the following command:\n\n$ sudo grep unlinkat /etc/audit/audit.rules\n\nThe output should be the following:\n\n-a always,exit -F arch=b32 -S unlinkat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b64 -S unlinkat -F exit=-EPERM -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b32 -S unlinkat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\n-a always,exit -F arch=b64 -S unlinkat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -k unsuccessful-delete\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-unsuccessful-file-modification-unlinkat"
                },
                "creationTimestamp": "2025-02-13T15:42:02Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-unsuccessful-file-modification-unlinkat",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353917",
                "uid": "3712fa72-803b-4f63-8280-895377042940"
            },
            "rationale": "Unsuccessful attempts to delete files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Note that these rules can be configured in a number of ways while still achieving the desired effect. Here the system calls have been placed independent of other system calls. Grouping system calls related to the same event is more efficient. See the following example:\n\n-a always,exit -F arch=b32 -S unlink,unlinkat,rename,renameat -F exit=-EACCES -F auid\u003e=1000 -F auid!=unset -F key=unsuccesful-delete"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information - /etc/group\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d , in order to capture events that modify account changes:\n\n-w /etc/group -p wa -k audit_rules_usergroup_modification\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, in order to capture events that modify account changes:\n\n-w /etc/group -p wa -k audit_rules_usergroup_modification",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification_group",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates audit records for all account creations, modifications, disabling, and termination events that affect \"/etc/group\" with the following command:\n\n$ sudo auditctl -l | grep -E '(/etc/group)'\n\n-w /etc/group -p wa -k identity\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-usergroup-modification-group"
                },
                "creationTimestamp": "2025-02-13T15:41:54Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-usergroup-modification-group",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353608",
                "uid": "a5260583-275c-4c05-b34c-742533dca32f"
            },
            "rationale": "In addition to auditing new user and group accounts, these watches will alert the system administrator(s) to any modifications. Any unexpected users, groups, or modifications should be investigated for legitimacy.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information - /etc/gshadow\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d , in order to capture events that modify account changes:\n\n-w /etc/gshadow -p wa -k audit_rules_usergroup_modification\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, in order to capture events that modify account changes:\n\n-w /etc/gshadow -p wa -k audit_rules_usergroup_modification",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification_gshadow",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates audit records for all account creations, modifications, disabling, and termination events that affect \"/etc/gshadow\" with the following command:\n\n$ sudo auditctl -l | grep -E '(/etc/gshadow)'\n\n-w /etc/gshadow -p wa -k identity\n\nIf the command does not return a line, or the line is commented out, this is a finding.\nIs it the case that the system is not configured to audit account changes?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-usergroup-modification-gshadow"
                },
                "creationTimestamp": "2025-02-13T15:41:57Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-usergroup-modification-gshadow",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353708",
                "uid": "462b24ba-d6cb-41fb-87bc-eb3e88524b74"
            },
            "rationale": "In addition to auditing new user and group accounts, these watches will alert the system administrator(s) to any modifications. Any unexpected users, groups, or modifications should be investigated for legitimacy.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information - /etc/security/opasswd\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d , in order to capture events that modify account changes:\n\n-w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, in order to capture events that modify account changes:\n\n-w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification_opasswd",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates audit records for all account creations, modifications, disabling, and termination events that affect \"/etc/security/opasswd\" with the following command:\n\n$ sudo auditctl -l | grep -E '(/etc/security/opasswd)'\n\n-w /etc/security/opasswd -p wa -k identity\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-usergroup-modification-opasswd"
                },
                "creationTimestamp": "2025-02-13T15:41:59Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-usergroup-modification-opasswd",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353789",
                "uid": "7ecbf57b-c4ee-4051-a0e9-ec156e6264fe"
            },
            "rationale": "In addition to auditing new user and group accounts, these watches will alert the system administrator(s) to any modifications. Any unexpected users, groups, or modifications should be investigated for legitimacy.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information - /etc/passwd\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d , in order to capture events that modify account changes:\n\n-w /etc/passwd -p wa -k audit_rules_usergroup_modification\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, in order to capture events that modify account changes:\n\n-w /etc/passwd -p wa -k audit_rules_usergroup_modification",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification_passwd",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates audit records for all account creations, modifications, disabling, and termination events that affect \"/etc/passwd\" with the following command:\n\n$  sudo auditctl -l | grep -E '(/etc/passwd)'\n\n-w /etc/passwd -p wa -k identity\nIs it the case that the command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-usergroup-modification-passwd"
                },
                "creationTimestamp": "2025-02-13T15:41:51Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-usergroup-modification-passwd",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353486",
                "uid": "739edab6-8eec-49ec-bfb2-3b5d15c3351a"
            },
            "rationale": "In addition to auditing new user and group accounts, these watches will alert the system administrator(s) to any modifications. Any unexpected users, groups, or modifications should be investigated for legitimacy.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Events that Modify User/Group Information - /etc/shadow\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix.rules in the directory /etc/audit/rules.d , in order to capture events that modify account changes:\n\n-w /etc/shadow -p wa -k audit_rules_usergroup_modification\n\nIf the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, in order to capture events that modify account changes:\n\n-w /etc/shadow -p wa -k audit_rules_usergroup_modification",
            "id": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification_shadow",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 generates audit records for all account creations, modifications, disabling, and termination events that affect \"/etc/passwd with the following command:\n\n$  sudo auditctl -l | grep -E '(/etc/shadow)'\n\n-w /etc/shadow -p wa -k identity\nIs it the case that command does not return a line, or the line is commented out?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "audit-rules-usergroup-modification-shadow"
                },
                "creationTimestamp": "2025-02-13T15:41:51Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-audit-rules-usergroup-modification-shadow",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353468",
                "uid": "1b33e228-5ba5-418b-addf-2e3479f49ded"
            },
            "rationale": "In addition to auditing new user and group accounts, these watches will alert the system administrator(s) to any modifications. Any unexpected users, groups, or modifications should be investigated for legitimacy.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure auditd Disk Error Action on Disk Error\nThe auditd service can be configured to take an action when there is a disk error. Edit the file /etc/audit/auditd.conf. Add or modify the following line, substituting ACTION appropriately:\n\ndisk_error_action = ACTION\n\nSet this value to single to cause the system to switch to single-user mode for corrective action. Acceptable values also include syslog , exec , single , and halt. For certain systems, the need for availability outweighs the need to log all actions, and a different setting should be determined. Details regarding all possible values for ACTION are described in the auditd.conf man page.",
            "id": "xccdf_org.ssgproject.content_rule_auditd_data_disk_error_action",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 takes the appropriate action when an audit processing failure occurs.\n\nCheck that Red Hat Enterprise Linux CoreOS 4 takes the appropriate action when an audit processing failure occurs with the following command:\n\n$ sudo grep disk_error_action /etc/audit/auditd.conf\n\ndisk_error_action =\n\nIf the value of the \"disk_error_action\" option is not \"SYSLOG\", \"SINGLE\", or \"HALT\", or the line is commented out, ask the system administrator to indicate how the system takes appropriate action when an audit process failure occurs.\nIs it the case that there is no evidence of appropriate action?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "auditd-data-disk-error-action"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-auditd-data-disk-error-action",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353293",
                "uid": "d1908579-e882-4071-a4a2-0c175db7f0bb"
            },
            "rationale": "Taking appropriate action in case of disk errors will minimize the possibility of losing audit records.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure auditd Disk Full Action when Disk Space Is Full\nThe auditd service can be configured to take an action when disk space is running low but prior to running out of space completely. Edit the file /etc/audit/auditd.conf. Add or modify the following line, substituting ACTION appropriately:\n\ndisk_full_action = ACTION\n\nSet this value to single to cause the system to switch to single-user mode for corrective action. Acceptable values also include syslog , exec , single , and halt. For certain systems, the need for availability outweighs the need to log all actions, and a different setting should be determined. Details regarding all possible values for ACTION are described in the auditd.conf man page.",
            "id": "xccdf_org.ssgproject.content_rule_auditd_data_disk_full_action",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 takes the appropriate action when the audit storage volume is full.\n\nCheck that Red Hat Enterprise Linux CoreOS 4 takes the appropriate action when the audit storage volume is full with the following command:\n\n$ sudo grep disk_full_action /etc/audit/auditd.conf\n\ndisk_full_action =\n\nIf the value of the \"disk_full_action\" option is not \"SYSLOG\", \"SINGLE\", or \"HALT\", or the line is commented out, ask the system administrator to indicate how the system takes appropriate action when an audit storage volume is full.\nIs it the case that there is no evidence of appropriate action?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "auditd-data-disk-full-action"
                },
                "creationTimestamp": "2025-02-13T15:42:07Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-auditd-data-disk-full-action",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354120",
                "uid": "99ac4624-511a-4d82-bc7d-81440ddd1fb4"
            },
            "rationale": "Taking appropriate action in case of a filled audit storage volume will minimize the possibility of losing audit records.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure auditd admin_space_left Action on Low Disk Space\nThe auditd service can be configured to take an action when disk space is running low but prior to running out of space completely. Edit the file /etc/audit/auditd.conf. Add or modify the following line, substituting ACTION appropriately:\n\nadmin_space_left_action = ACTION\n\nSet this value to single to cause the system to switch to single user mode for corrective action. Acceptable values also include suspend and halt. For certain systems, the need for availability outweighs the need to log all actions, and a different setting should be determined. Details regarding all possible values for ACTION are described in the auditd.conf man page.",
            "id": "xccdf_org.ssgproject.content_rule_auditd_data_retention_admin_space_left_action",
            "instructions": "Verify that Red Hat Enterprise Linux CoreOS 4 is configured to take action in the event of allocated audit record storage volume reaches 95 percent of the repository maximum audit record storage capacity with the following command:\n\n$ sudo grep admin_space_left_action /etc/audit/auditd.conf\n\nadmin_space_left_action = single\n\nIf the value of the \"admin_space_left_action\" is not set to \"single\", or if the line is commented out, ask the System Administrator to indicate how the system is providing real-time alerts to the SA and ISSO.\nIs it the case that there is no evidence that real-time alerts are configured on the system?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "auditd-data-retention-admin-space-left-action"
                },
                "creationTimestamp": "2025-02-13T15:41:48Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-auditd-data-retention-admin-space-left-action",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353337",
                "uid": "911d4d1e-c913-4f30-a5b7-18ede1fa43a8"
            },
            "rationale": "Administrators should be made aware of an inability to record audit records. If a separate partition or logical volume of adequate size is used, running low on space for audit records should never occur.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure auditd space_left on Low Disk Space\nThe auditd service can be configured to take an action when disk space is running low but prior to running out of space completely. Edit the file /etc/audit/auditd.conf. Add or modify the following line, substituting SIZE_in_MB appropriately:\n\nspace_left = SIZE_in_MB\n\nSet this value to the appropriate size in Megabytes cause the system to notify the user of an issue.",
            "id": "xccdf_org.ssgproject.content_rule_auditd_data_retention_space_left",
            "instructions": "Inspect /etc/audit/auditd.conf and locate the following line to\ndetermine if the system is configured correctly:\nspace_left SIZE_in_MB\nIs it the case that the system is not configured a specfic size in MB to notify administrators of an issue?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "auditd-data-retention-space-left"
                },
                "creationTimestamp": "2025-02-13T15:41:52Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-has-value": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-auditd-data-retention-space-left",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353530",
                "uid": "f030e70e-cc37-4ba6-ab00-75c66cfbbdbc"
            },
            "rationale": "Notifying administrators of an impending disk space problem may allow them to take corrective action prior to any disruption.",
            "severity": "medium",
            "status": "FAIL",
            "valuesUsed": [
                "var-auditd-space-left"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Set type of computer node name logging in audit logs\nTo configure Audit daemon to use a unique identifier as computer node name in the audit events, set name_format to hostname in /etc/audit/auditd.conf.",
            "id": "xccdf_org.ssgproject.content_rule_auditd_name_format",
            "instructions": "To verify that Audit Daemon is configured to record the computer node\nname in the audit events, run the following command:\n$ sudo grep name_format /etc/audit/auditd.conf\nThe output should return the following:\nname_format =\nIs it the case that name_format isn't set to \u003csub idref=\"var_auditd_name_format\" /\u003e?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "auditd-name-format"
                },
                "creationTimestamp": "2025-02-13T15:42:04Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-auditd-name-format",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353981",
                "uid": "3443cf8f-6fac-4628-89ec-d02184b0a985"
            },
            "rationale": "If option name_format is left at its default value of none , audit events from different computers may be hard to distinguish.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Whenever the variable\n\nvar_auditd_name_format\n\nuses a multiple value option, for example\n\nA|B|C\n\n, the first value will be used when remediating this rule."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Modify the System Login Banner\nTo configure the system login banner create a file under /etc/issue.d The Machine Configuration provided with this rule is generic. You may need to adjust it accordingly to fit your usecase. The DoD required text is either:\n\nYou are accessing a U.S. Government (USG) Information System (IS) that is provided for USG-authorized use only. By using this IS (which includes any device attached to this IS), you consent to the following conditions:\n\n-The USG routinely intercepts and monitors communications on this IS for purposes including, but not limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations.\n\n-At any time, the USG may inspect and seize data stored on this IS.\n\n-Communications using, or data stored on, this IS are not private, are subject to routine monitoring, interception, and search, and may be disclosed or used for any USG-authorized purpose.\n\n-This IS includes security measures (e.g., authentication and access controls) to protect USG interests -- not for your personal benefit or privacy.\n\n-Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative searching or monitoring of the content of privileged communications, or work product, related to personal representation or services by attorneys, psychotherapists, or clergy, and their assistants. Such communications and work product are private and confidential. See User Agreement for details.\n\nOR:\n\nI've read \u0026 consent to terms in IS user agreem't.\n\nTo address this, please create a MachineConfig object with the appropriate text in a drop-in file in /etc/issue.d/. You can also use the supplied remediation, which will be available based on scan results using `oc get remediations`. The default remediation is opinionated and you may need to adjust the MachineConfig accordingly for your use case. Do not try to edit /etc/issue directly as this is a symlink provided by the Operating System.\n\nFor example, if you're using the DoD required text, the manifest would look as follows:\n\n---\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n labels:\n   machineconfiguration.openshift.io/role: master\n name: 75-master-etc-issue\nspec:\n config:\n   ignition:\n     version: 3.1.0\n   storage:\n     files:\n     - contents:\n         source: data:,You%20are%20accessing%20a%20U.S.%20Government%20%28USG%29%20Information%20System%20%28IS%29%20that%20is%20%0Aprovided%20for%20USG-authorized%20use%20only.%20By%20using%20this%20IS%20%28which%20includes%20any%20%0Adevice%20attached%20to%20this%20IS%29%2C%20you%20consent%20to%20the%20following%20conditions%3A%0A%0A-The%20USG%20routinely%20intercepts%20and%20monitors%20communications%20on%20this%20IS%20for%20%0Apurposes%20including%2C%20but%20not%20limited%20to%2C%20penetration%20testing%2C%20COMSEC%20monitoring%2C%20%0Anetwork%20operations%20and%20defense%2C%20personnel%20misconduct%20%28PM%29%2C%20law%20enforcement%20%0A%28LE%29%2C%20and%20counterintelligence%20%28CI%29%20investigations.%0A%0A-At%20any%20time%2C%20the%20USG%20may%20inspect%20and%20seize%20data%20stored%20on%20this%20IS.%0A%0A-Communications%20using%2C%20or%20data%20stored%20on%2C%20this%20IS%20are%20not%20private%2C%20are%20subject%20%0Ato%20routine%20monitoring%2C%20interception%2C%20and%20search%2C%20and%20may%20be%20disclosed%20or%20used%20%0Afor%20any%20USG-authorized%20purpose.%0A%0A-This%20IS%20includes%20security%20measures%20%28e.g.%2C%20authentication%20and%20access%20controls%29%20%0Ato%20protect%20USG%20interests--not%20for%20your%20personal%20benefit%20or%20privacy.%0A%0A-Notwithstanding%20the%20above%2C%20using%20this%20IS%20does%20not%20constitute%20consent%20to%20PM%2C%20LE%20%0Aor%20CI%20investigative%20searching%20or%20monitoring%20of%20the%20content%20of%20privileged%20%0Acommunications%2C%20or%20work%20product%2C%20related%20to%20personal%20representation%20or%20services%20%0Aby%20attorneys%2C%20psychotherapists%2C%20or%20clergy%2C%20and%20their%20assistants.%20Such%20%0Acommunications%20and%20work%20product%20are%20private%20and%20confidential.%20See%20User%20%0AAgreement%20for%20details.\n       mode: 0644\n       path: /etc/issue.d/legal-notice\n       overwrite: true\n\nNote that this needs to be done for each MachineConfigPool\n\nFor more information on how to configure nodes with the Machine Config Operator see the relevant documentation ( https://docs.openshift.com/container-platform/4.6/post_installation_configuration/machine-configuration-tasks.html ).",
            "id": "xccdf_org.ssgproject.content_rule_banner_etc_issue",
            "instructions": "To check if the system login banner is compliant,\nrun the following command:\n\n$ cat /etc/issue.d/legal-notice\nIs it the case that it does not display the required banner?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "banner-etc-issue"
                },
                "creationTimestamp": "2025-02-13T15:41:56Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-has-value": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-banner-etc-issue",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353690",
                "uid": "b48e2e60-ce10-4ac0-b863-51a7515e49e7"
            },
            "rationale": "Display of a standardized and approved use notification before granting access to the operating system ensures privacy and security notification verbiage used is consistent with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.\n\nSystem use notifications are required only for access via login interfaces with human users and are not required when such human interfaces do not exist.",
            "severity": "medium",
            "status": "FAIL",
            "valuesUsed": [
                "login-banner-text"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable chrony daemon from acting as server\nThe port option in /etc/chrony.conf can be set to 0 to make chrony daemon to never open any listening port for server operation and to operate strictly in a client-only mode.",
            "id": "xccdf_org.ssgproject.content_rule_chronyd_client_only",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 disables the chrony daemon from acting as a server with the following command:\n$ grep -w port /etc/chrony.conf\nport 0\nIs it the case that the \"port\" option is not set to \"0\", is commented out, or is missing?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "chronyd-client-only"
                },
                "creationTimestamp": "2025-02-13T15:42:00Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-chronyd-client-only",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353857",
                "uid": "3fac7ad9-5a6d-4c04-9677-b119795eb8f6"
            },
            "rationale": "In order to prevent unauthorized connection of devices, unauthorized transfer of information, or unauthorized tunneling (i.e., embedding of data types within data types), organizations must disable or restrict unused or unnecessary physical and logical ports/protocols on information systems. Operating systems are capable of providing a wide variety of functions and services. Some of the functions and services provided by default may not be necessary to support essential organizational operations. Additionally, it is sometimes convenient to provide multiple services from a single component (e.g., VPN and IPS); however, doing so increases risk over limiting the services provided by any one component. To support the requirements and principles of least functionality, the operating system must support the organizational requirements, providing only essential capabilities and limiting the use of ports, protocols, and/or services to only those required, authorized, and approved to conduct official business or to address authorized quality of life issues.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable network management of chrony daemon\nThe cmdport option in /etc/chrony.conf can be set to 0 to stop chrony daemon from listening on the UDP port 323 for management connections made by chronyc.",
            "id": "xccdf_org.ssgproject.content_rule_chronyd_no_chronyc_network",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 disables network management of the chrony daemon with the following command:\n$ grep -w cmdport /etc/chrony.conf\ncmdport 0\nIs it the case that the \"cmdport\" option is not set to \"0\", is commented out, or is missing?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "chronyd-no-chronyc-network"
                },
                "creationTimestamp": "2025-02-13T15:41:54Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-chronyd-no-chronyc-network",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353618",
                "uid": "15032d6f-8423-4987-9312-6894eca84c33"
            },
            "rationale": "Minimizing the exposure of the server functionality of the chrony daemon diminishes the attack surface.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure Time Service Maxpoll Interval\nThe maxpoll should be configured to 10 in /etc/ntp.conf or /etc/chrony.conf (or /etc/chrony.d/ ) to continuously poll time servers. To configure maxpoll in /etc/ntp.conf or /etc/chrony.conf (or /etc/chrony.d/ ) add the following after each server , pool or peer entry:\n\nmaxpoll 10 \n\nto server directives. If using chrony, any pool directives should be configured too.\n\nNote that if the remediation shipping with this content is being used, the *MachineConfig* shipped does not include reference NTP servers to point to. It is up to the admin to set these which will vary depending on the cluster's requirements.\n\nThe aforementioned remediation does include the directory /etc/chrony.d which would allow the creation of configuration files to set these servers.\n\nIf we'd like to set a configuration like the following:\n\npool 2.rhel.pool.ntp.org iburst\n\nserver 0.rhel.pool.ntp.org minpoll 4 maxpoll 10\nserver 1.rhel.pool.ntp.org minpoll 4 maxpoll 10\nserver 2.rhel.pool.ntp.org minpoll 4 maxpoll 10\nserver 3.rhel.pool.ntp.org minpoll 4 maxpoll 10\n\nThis could be done with to the following manifest:\n\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n labels:\n   machineconfiguration.openshift.io/role: master\n name: 75-master-chrony-servers\nspec:\n config:\n   ignition:\n     version: 3.1.0\n   storage:\n     files:\n     - contents:\n         source: data:,pool%202.rhel.pool.ntp.org%20iburst%0A%0Aserver%200.rhel.pool.ntp.org%20minpoll%204%20maxpoll%2010%0Aserver%201.rhel.pool.ntp.org%20minpoll%204%20maxpoll%2010%0Aserver%202.rhel.pool.ntp.org%20minpoll%204%20maxpoll%2010%0Aserver%203.rhel.pool.ntp.org%20minpoll%204%20maxpoll%2010\n       mode: 0600\n       path: /etc/chrony.d/10-rhel-pool-and-servers.conf\n       overwrite: true\n\nNote that this needs to be done for each\n\nMachineConfigPool",
            "id": "xccdf_org.ssgproject.content_rule_chronyd_or_ntpd_set_maxpoll",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 is securely comparing internal information system clocks at a regular interval with an NTP server with the following command:\n$ sudo grep maxpoll /etc/ntp.conf /etc/chrony.conf /etc/chrony.d/\nserver [ntp.server.name] iburst maxpoll .\nIs it the case that \"maxpoll\" has not been set to the value of \"\u003csub idref=\"var_time_service_set_maxpoll\" /\u003e\", is commented out, or is missing?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "chronyd-or-ntpd-set-maxpoll"
                },
                "creationTimestamp": "2025-02-13T15:41:48Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-has-value": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-chronyd-or-ntpd-set-maxpoll",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353352",
                "uid": "f0a6d226-47de-49ac-bf65-35d7ff38d49e"
            },
            "rationale": "Inaccurate time stamps make it more difficult to correlate events and can lead to an inaccurate analysis. Determining the correct time a particular event occurred on a system is critical when conducting forensic analysis and investigating system events. Sources outside the configured acceptable allowance (drift) may be inaccurate. Synchronizing internal information system clocks provides uniformity of time stamps for information systems with multiple system clocks and systems connected over a network. Organizations should consider endpoints that may not have regular access to the authoritative time server (e.g., mobile, teleworking, and tactical endpoints).",
            "severity": "medium",
            "status": "FAIL",
            "valuesUsed": [
                "var-time-service-set-maxpoll"
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Specify Additional Remote NTP Servers\nDepending on specific functional requirements of a concrete production environment, the Red Hat Enterprise Linux CoreOS 4 system can be configured to utilize the services of the chronyd NTP daemon (the default), or services of the ntpd NTP daemon. Refer to https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/ch-configuring_ntp_using_the_chrony_suite for more detailed comparison of the features of both of the choices, and for further guidance how to choose between the two NTP daemons.\n\nAdditional NTP servers can be specified for time synchronization. To do so, perform the following:\n\n* if the system is configured to use the chronyd as the NTP daemon (the default), edit the file /etc/chrony.conf as follows,\n* if the system is configured to use the ntpd as the NTP daemon, edit the file /etc/ntp.conf as documented below.\n\nAdd additional lines of the following form, substituting the IP address or hostname of a remote NTP server for ntpserver :\n\nserver ntpserver\n\nNote that if the remediation shipping with this content is being used, the *MachineConfig* shipped does not include reference NTP servers to point to. It is up to the admin to set these which will vary depending on the cluster's requirements.\n\nThe aforementioned remediation does include the directory /etc/chrony.d which would allow the creation of configuration files to set these servers.\n\nIf we'd like to set a configuration like the following:\n\npool 2.rhel.pool.ntp.org iburst\n\nserver 0.rhel.pool.ntp.org minpoll 4 maxpoll 10\nserver 1.rhel.pool.ntp.org minpoll 4 maxpoll 10\nserver 2.rhel.pool.ntp.org minpoll 4 maxpoll 10\nserver 3.rhel.pool.ntp.org minpoll 4 maxpoll 10\n\nThis could be done with to the following manifest:\n\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n labels:\n   machineconfiguration.openshift.io/role: master\n name: 75-master-chrony-servers\nspec:\n config:\n   ignition:\n     version: 3.1.0\n   storage:\n     files:\n     - contents:\n         source: data:,pool%202.rhel.pool.ntp.org%20iburst%0A%0Aserver%200.rhel.pool.ntp.org%20minpoll%204%20maxpoll%2010%0Aserver%201.rhel.pool.ntp.org%20minpoll%204%20maxpoll%2010%0Aserver%202.rhel.pool.ntp.org%20minpoll%204%20maxpoll%2010%0Aserver%203.rhel.pool.ntp.org%20minpoll%204%20maxpoll%2010\n       mode: 0600\n       path: /etc/chrony.d/10-rhel-pool-and-servers.conf\n       overwrite: true\n\nNote that this needs to be done for each\n\nMachineConfigPool",
            "id": "xccdf_org.ssgproject.content_rule_chronyd_or_ntpd_specify_multiple_servers",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "chronyd-or-ntpd-specify-multiple-servers"
                },
                "creationTimestamp": "2025-02-13T15:41:46Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-chronyd-or-ntpd-specify-multiple-servers",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353239",
                "uid": "e7aa11b4-abc9-4f92-9a39-2d05f5b03d17"
            },
            "rationale": "Specifying additional NTP servers increases the availability of accurate time data, in the event that one of the specified servers becomes unavailable. This is typical for a system acting as an NTP server for other systems.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure System Cryptography Policy\nTo configure the system cryptography policy to use ciphers only from the FIPS policy, create a MachineConfig as follows:\n\n---\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n labels:\n   machineconfiguration.openshift.io/role: master\n name: 50-master-configure-crypto-policy\nspec:\n config:\n   ignition:\n     version: 3.1.0\n   systemd:\n     units:\n       - name: configure-crypto-policy.service\n         enabled: true\n         contents: |\n           [Unit]\n           Before=kubelet.service\n           [Service]\n           Type=oneshot\n           ExecStart=update-crypto-policies --set FIPS RemainAfterExit=yes\n           [Install]\n           WantedBy=multi-user.target\n\nThis will configure the crypto policy appropriately in all the nodes labeled with the \"master\" role.\n\nNote that this needs to be done for each MachineConfigPool\n\nFor more information on how to configure nodes with the Machine Config Operator see the relevant documentation ( https://docs.openshift.com/container-platform/4.6/post_installation_configuration/machine-configuration-tasks.html ).\n\nThe rule checks if settings for selected crypto policy are configured as expected. Configuration files in the /etc/crypto-policies/back-ends are either symlinks to correct files provided by Crypto-policies package or they are regular files in case crypto policy customizations are applied. Crypto policies may be customized by crypto policy modules, in which case it is delimited from the base policy using a colon.",
            "id": "xccdf_org.ssgproject.content_rule_configure_crypto_policy",
            "instructions": "To verify that cryptography policy has been configured correctly, run the\nfollowing command:\n$ update-crypto-policies --show\nThe output should return .\nRun the command to check if the policy is correctly applied:\n$ update-crypto-policies --is-applied\nThe output should be The configured policy is applied.\nMoreover, check if settings for selected crypto policy are as expected.\nList all libraries for which it holds that their crypto policies do not have symbolic link in /etc/crypto-policies/back-ends.\n$ ls -l /etc/crypto-policies/back-ends/ | grep '^[^l]' | tail -n +2 | awk -F' ' '{print $NF}' | awk -F'.' '{print $1}' | sort\nSubsequently, check if matching libraries have drop in files in the /etc/crypto-policies/local.d directory.\n$ ls /etc/crypto-policies/local.d/ | awk -F'-' '{print $1}' | uniq | sort\nOutputs of two previous commands should match.\nIs it the case that cryptographic policy is not configured or is configured incorrectly?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "configure-crypto-policy"
                },
                "creationTimestamp": "2025-02-13T15:41:48Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-has-value": "",
                    "compliance.openshift.io/check-severity": "high",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-configure-crypto-policy",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353363",
                "uid": "52892874-da35-42de-ae74-32bbf80a63d5"
            },
            "rationale": "Centralized cryptographic policies simplify applying secure ciphers across an operating system and the applications that run on that operating system. Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data.",
            "severity": "high",
            "status": "FAIL",
            "valuesUsed": [
                "var-system-crypto-policy"
            ],
            "warnings": [
                "The system needs to be rebooted for these changes to take effect.",
                "System Crypto Modules must be provided by a vendor that undergoes FIPS-140 certifications. FIPS-140 is applicable to all Federal agencies that use cryptographic-based security systems to protect sensitive information in computer and telecommunication systems (including voice systems) as defined in Section 5131 of the Information Technology Management Reform Act of 1996, Public Law 104-106. This standard shall be used in designing and implementing cryptographic modules that Federal departments and agencies operate or are operated for them under contract. See *https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf* To meet this, the system has to have cryptographic software provided by a vendor that has undergone this certification. This means providing documentation, test results, design information, and independent third party review by an accredited lab. While open source software is capable of meeting this, it does not meet FIPS-140 unless the vendor submits to this process."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable core dump backtraces\nThe ProcessSizeMax option in [Coredump] section of /etc/systemd/coredump.conf specifies the maximum size in bytes of a core which will be processed. Core dumps exceeding this size may be stored, but the backtrace will not be generated.",
            "id": "xccdf_org.ssgproject.content_rule_coredump_disable_backtraces",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 disables core dump backtraces by issuing the following command:\n\n$ grep -i process /etc/systemd/coredump.conf\n\nProcessSizeMax=0\nIs it the case that the \"ProcessSizeMax\" item is missing, commented out, or the value is anything other than \"0\" and the need for core dumps is not documented with the Information System Security Officer (ISSO) as an operational requirement for all domains that have the \"core\" item assigned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "coredump-disable-backtraces"
                },
                "creationTimestamp": "2025-02-13T15:42:04Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-coredump-disable-backtraces",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354010",
                "uid": "89db4bc2-7a47-4b79-a65b-51874afceced"
            },
            "rationale": "A core dump includes a memory image taken at the time the operating system terminates an application. The memory image could contain sensitive data and is generally useful only for developers or system operators trying to debug problems. Enabling core dumps on production systems is not recommended, however there may be overriding operational requirements to enable advanced debuging. Permitting temporary enablement of core dumps during such situations should be reviewed through local needs and policy.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "If the /etc/systemd/coredump.conf file does not already contain the [Coredump] section, the value will not be configured correctly."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable storing core dump\nThe Storage option in [Coredump] sectionof /etc/systemd/coredump.conf can be set to none to disable storing core dumps permanently.",
            "id": "xccdf_org.ssgproject.content_rule_coredump_disable_storage",
            "instructions": "Verify Red Hat Enterprise Linux CoreOS 4 disables storing core dumps for all users by issuing the following command:\n\n$ grep -i storage /etc/systemd/coredump.conf\n\nStorage=none\nIs it the case that Storage is not set to none or is commented out and the need for core dumps is not documented with the Information System Security Officer (ISSO) as an operational requirement for all domains that have the \"core\" item assigned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "coredump-disable-storage"
                },
                "creationTimestamp": "2025-02-13T15:41:48Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-coredump-disable-storage",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353346",
                "uid": "7c7cdc9f-527d-4a49-882a-a786d39a2a70"
            },
            "rationale": "A core dump includes a memory image taken at the time the operating system terminates an application. The memory image could contain sensitive data and is generally useful only for developers or system operators trying to debug problems. Enabling core dumps on production systems is not recommended, however there may be overriding operational requirements to enable advanced debuging. Permitting temporary enablement of core dumps during such situations should be reviewed through local needs and policy.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "If the /etc/systemd/coredump.conf file does not already contain the [Coredump] section, the value will not be configured correctly."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Extend Audit Backlog Limit for the Audit Daemon\nTo improve the kernel capacity to queue all log events, even those which occurred prior to the audit daemon, add the argument audit_backlog_limit=8192 to all BLS (Boot Loader Specification) entries ('options' line) for the Linux operating system in /boot/loader/entries/*.conf.",
            "id": "xccdf_org.ssgproject.content_rule_coreos_audit_backlog_limit_kernel_argument",
            "instructions": "Inspect the form of all the BLS (Boot Loader Specification) entries\n('options' line) in /boot/loader/entries/*.conf. If they include\naudit=1, then auditing is enabled at boot time.\n\nTo ensure audit_backlog_limit=8192 is configured on the installed kernel, add\nthe kernel argument via a MachineConfig object to the appropriate\npools.\nIs it the case that audit backlog limit is not configured?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "coreos-audit-backlog-limit-kernel-argument"
                },
                "creationTimestamp": "2025-02-13T15:41:56Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-coreos-audit-backlog-limit-kernel-argument",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353684",
                "uid": "983b1f8f-be22-425a-8121-08b642ec0d58"
            },
            "rationale": "audit_backlog_limit sets the queue length for audit events awaiting transfer to the audit daemon. Until the audit daemon is up and running, all log messages are stored in this queue. If the queue is overrun during boot process, the action defined by audit failure flag is taken.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Enable Auditing for Processes Which Start Prior to the Audit Daemon\nTo ensure all processes can be audited, even those which start prior to the audit daemon, add the argument audit=1 to all BLS (Boot Loader Specification) entries ('options' line) for the Linux operating system in /boot/loader/entries/*.conf.",
            "id": "xccdf_org.ssgproject.content_rule_coreos_audit_option",
            "instructions": "Inspect the form of BLS (Boot Loader Specification) options lines for the Linux operating system\nin /boot/loader/entries/*.conf. If they include audit=1, then auditing\nis enabled at boot time.\n# grep 'options.*audit=1.*' /boot/loader/entires/*.conf\n\nIs it the case that auditing is not enabled at boot time?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "coreos-audit-option"
                },
                "creationTimestamp": "2025-02-13T15:41:51Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-coreos-audit-option",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353483",
                "uid": "a6efd268-cccd-46ba-8d73-a5c136092f4e"
            },
            "rationale": "Each process on the system carries an \"auditable\" flag which indicates whether its activities can be audited. Although auditd takes care of enabling this for all processes which launch after it does, adding the kernel argument ensures it is set for every process during boot.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel Support for USB via Bootloader Configuration\nAll USB support can be disabled by adding the nousb argument to the kernel's boot loader configuration. To do so, Add the nousb kernel argument via a MachineConfig object.",
            "id": "xccdf_org.ssgproject.content_rule_coreos_nousb_kernel_argument",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "coreos-nousb-kernel-argument"
                },
                "creationTimestamp": "2025-02-13T15:41:58Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-coreos-nousb-kernel-argument",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353742",
                "uid": "00de770a-3b6a-4e54-84e5-96e8bc0b057f"
            },
            "rationale": "Disabling the USB subsystem within the Linux kernel at system boot will protect against potentially malicious USB devices, although it is only practical in specialized systems.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "Disabling all kernel support for USB will cause problems for systems with USB-based keyboards, mice, or printers. This configuration is infeasible for systems which require USB devices, which is common."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Enable page allocator poisoning\nTo enable poisoning of free pages, add the argument page_poison=1 to all BLS (Boot Loader Specification) entries ('options' line) for the Linux operating system in /boot/loader/entries/*.conf.",
            "id": "xccdf_org.ssgproject.content_rule_coreos_page_poison_kernel_argument",
            "instructions": "Inspect the form of all the BLS (Boot Loader Specification) entries\n('options' line) in /boot/loader/entries/*.conf. If they include\npage_poison=1, then page poisoning is enabled at boot time.\n\nTo ensure page_poison=1 is configured on the installed kernel, add\nthe kernel argument via a MachineConfig object to the appropriate\npools.\nIs it the case that page allocator poisoning is not enabled?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "coreos-page-poison-kernel-argument"
                },
                "creationTimestamp": "2025-02-13T15:41:54Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-coreos-page-poison-kernel-argument",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353615",
                "uid": "010d8d75-4257-42e8-af02-7fb99253d8da"
            },
            "rationale": "Poisoning writes an arbitrary value to freed pages, so any modification or reference to that page after being freed or before being initialized will be detected and prevented. This prevents many types of use-after-free vulnerabilities at little performance cost. Also prevents leak of data and detection of corrupted memory.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Enable Kernel Page-Table Isolation (KPTI)\nTo enable Kernel page-table isolation, add the argument pti=on to all BLS (Boot Loader Specification) entries ('options' line) for the Linux operating system in /boot/loader/entries/*.conf.",
            "id": "xccdf_org.ssgproject.content_rule_coreos_pti_kernel_argument",
            "instructions": "Inspect the form of all the BLS (Boot Loader Specification) entries\n('options' line) in /boot/loader/entries/*.conf. If they include\npti=on, then Kernel page-table isolation is enabled at boot time.\n\nTo ensure pti=on is configured on the installed kernel, add\nthe kernel argument via a MachineConfig object to the appropriate\npools.\nIs it the case that Kernel page-table isolation is not enabled?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "coreos-pti-kernel-argument"
                },
                "creationTimestamp": "2025-02-13T15:42:06Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "high",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-coreos-pti-kernel-argument",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354062",
                "uid": "12c2f962-1109-4663-bb4e-31ec8d846308"
            },
            "rationale": "Kernel page-table isolation is a kernel feature that mitigates the Meltdown security vulnerability and hardens the kernel against attempts to bypass kernel address space layout randomization (KASLR).",
            "severity": "high",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable vsyscalls\nTo disable use of virtual syscalls, add the argument vsyscall=none to all BLS (Boot Loader Specification) entries ('options' line) for the Linux operating system in /boot/loader/entries/*.conf.",
            "id": "xccdf_org.ssgproject.content_rule_coreos_vsyscall_kernel_argument",
            "instructions": "Inspect the form of all the BLS (Boot Loader Specification) entries\n('options' line) in /boot/loader/entries/*.conf. If they include\nvsyscall=none, then virtual syscalls are not enabled at boot time.\n\nTo ensure vsyscall=none is configured on the installed kernel, add\nthe kernel argument via a MachineConfig object to the appropriate\npools.\nIs it the case that vsyscalls are enabled?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "coreos-vsyscall-kernel-argument"
                },
                "creationTimestamp": "2025-02-13T15:42:04Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-coreos-vsyscall-kernel-argument",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354000",
                "uid": "24315b7e-fcbf-46ce-94d7-8e4563c256d0"
            },
            "rationale": "Virtual Syscalls provide an opportunity of attack for a user who has control of the return instruction pointer.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Record Access Events to Audit Log Directory\nThe audit system should collect access events to read audit log directory. The following audit rule will assure that access to audit log directory are collected.\n\n-a always,exit -F dir=/var/log/audit/ -F perm=r -F auid\u003e=1000 -F auid!=unset -F key=access-audit-trail\n\nIf the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the rule to a file with suffix.rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the rule to /etc/audit/audit.rules file.",
            "id": "xccdf_org.ssgproject.content_rule_directory_access_var_log_audit",
            "instructions": "To determine if the system is configured to audit accesses to\n/var/log/audit directory, run the following command:\n$ sudo grep \"dir=/var/log/audit\" /etc/audit/audit.rules\nIf the system is configured to audit this activity, it will return a line.\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "directory-access-var-log-audit"
                },
                "creationTimestamp": "2025-02-13T15:42:08Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-directory-access-var-log-audit",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354161",
                "uid": "a5516e0a-89b1-4a8b-822f-5a8ecb0ea2da"
            },
            "rationale": "Attempts to read the logs should be recorded, suspicious access to audit log files could be an indicator of malicious activity on a system. Auditing these events could serve as evidence of potential system compromise.'",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Ctrl-Alt-Del Burst Action\nBy default, SystemD will reboot the system if the Ctrl-Alt-Del key sequence is pressed Ctrl-Alt-Delete more than 7 times in 2 seconds.\n\nTo configure the system to ignore the CtrlAltDelBurstAction setting, create a MachineConfig similar to the following:\n\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n labels:\n   machineconfiguration.openshift.io/role: master\n name: 75-master-disable-ctrlaltdel-burstaction\nspec:\n config:\n   ignition:\n     version: 3.1.0\n   storage:\n     files:\n     - contents:\n         source: data:,CtrlAltDelBurstAction%3Dnone\n       mode: 0644\n       path: /etc/systemd/system.conf.d/disable_ctrlaltdelete_burstaction.conf\n       overwrite: true\nEOF\n\nThis will add the relevant configuration to /etc/systemd/system.conf.d/ , thus configuring Systemd apropriately.\n\nNote that this needs to be done for each MachineConfigPool\n\nFor more information on how to configure nodes with the Machine Config Operator see the relevant documentation ( https://docs.openshift.com/container-platform/4.6/post_installation_configuration/machine-configuration-tasks.html ).",
            "id": "xccdf_org.ssgproject.content_rule_disable_ctrlaltdel_burstaction",
            "instructions": "To ensure the system is configured to ignore the Ctrl-Alt-Del setting,\nenter the following command:\n$ sudo grep -i ctrlaltdelburstaction /etc/systemd/system.conf\nThe output should return:\nCtrlAltDelBurstAction=none\nIs it the case that the system is configured to reboot when Ctrl-Alt-Del is pressed more than 7 times in 2 seconds.?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "disable-ctrlaltdel-burstaction"
                },
                "creationTimestamp": "2025-02-13T15:41:54Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "high",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-disable-ctrlaltdel-burstaction",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353592",
                "uid": "6e0b8e49-a881-47f3-b596-ada5c6d21660"
            },
            "rationale": "A locally logged-in user who presses Ctrl-Alt-Del, when at the console, can reboot the system. If accidentally pressed, as could happen in the case of mixed OS environment, this can create the risk of short-term loss of availability of systems due to unintentional reboot.",
            "severity": "high",
            "status": "FAIL",
            "warnings": [
                "Disabling the Ctrl-Alt-Del key sequence in /etc/init/control-alt-delete.conf DOES NOT disable the Ctrl-Alt-Del key sequence if running in runlevel 6 (e.g. in GNOME, KDE, etc.)! The Ctrl-Alt-Del key sequence will only be disabled if running in the non-graphical runlevel 3."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Ctrl-Alt-Del Reboot Activation\nBy default, SystemD will reboot the system if the Ctrl-Alt-Del key sequence is pressed.\n\nTo configure the system to ignore the Ctrl-Alt-Del key sequence from the command line instead of rebooting the system, create a MachineConfig similar to the following:\n\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n labels:\n   machineconfiguration.openshift.io/role: master\n name: 75-master-disable-ctrlaltdel-reboot\nspec:\n config:\n   ignition:\n     version: 3.1.0\n   systemd:\n     units:\n     - name: ctrl-alt-del.target\n       mask: true\nEOF\n\nThis will mask the ctrl-alt-del.target systemd target for all the nodes labeled with the \"master\" role.\n\nNote that this needs to be done for each MachineConfigPool\n\nFor more information on how to configure nodes with the Machine Config Operator see the relevant documentation ( https://docs.openshift.com/container-platform/4.6/post_installation_configuration/machine-configuration-tasks.html ).",
            "id": "xccdf_org.ssgproject.content_rule_disable_ctrlaltdel_reboot",
            "instructions": "To ensure the system is configured to mask the Ctrl-Alt-Del sequence, Check\nthat the ctrl-alt-del.target is masked and not active with the following\ncommand:\nsudo systemctl status ctrl-alt-del.target\nThe output should indicate that the target is masked and not active. It\nmight resemble following output:\nctrl-alt-del.target\nLoaded: masked (/dev/null; bad)\nActive: inactive (dead)\nIs it the case that the system is configured to reboot when Ctrl-Alt-Del is pressed?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "disable-ctrlaltdel-reboot"
                },
                "creationTimestamp": "2025-02-13T15:42:07Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "high",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-disable-ctrlaltdel-reboot",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354097",
                "uid": "2e4142cd-4073-4ee4-9a5c-8a0e716d0de1"
            },
            "rationale": "A locally logged-in user who presses Ctrl-Alt-Del, when at the console, can reboot the system. If accidentally pressed, as could happen in the case of mixed OS environment, this can create the risk of short-term loss of availability of systems due to unintentional reboot.",
            "severity": "high",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Core Dumps for All Users\nTo disable core dumps for all users, add the following line to /etc/security/limits.conf , or to a file within the /etc/security/limits.d/ directory:\n\n*     hard   core    0",
            "id": "xccdf_org.ssgproject.content_rule_disable_users_coredumps",
            "instructions": "Verify that core dumps are disabled for all users, run the following command:\n$ grep core /etc/security/limits.conf\n*     hard   core    0\nIs it the case that the \"core\" item is missing, commented out, or the value is anything other than \"0\" and the need for core dumps is not documented with the Information System Security Officer (ISSO) as an operational requirement for all domains that have the \"core\"?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "disable-users-coredumps"
                },
                "creationTimestamp": "2025-02-13T15:41:49Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-disable-users-coredumps",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353390",
                "uid": "f563725d-debe-45e3-8af3-bddff05ce92c"
            },
            "rationale": "A core dump includes a memory image taken at the time the operating system terminates an application. The memory image could contain sensitive data and is generally useful only for developers trying to debug problems.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Ensure Logrotate Runs Periodically\nThe logrotate utility allows for the automatic rotation of log files. The frequency of rotation is specified in /etc/logrotate.conf , which triggers a cron task or a timer. To configure logrotate to run daily, add or correct the following line in /etc/logrotate.conf :\n\n# rotate log files frequency daily",
            "id": "xccdf_org.ssgproject.content_rule_ensure_logrotate_activated",
            "instructions": "To determine the status and frequency of logrotate, run the following command:\n$ sudo grep logrotate /var/log/cron*\nIf logrotate is configured properly, output should include references to\n/etc/cron.daily.\nIs it the case that logrotate is not configured to run daily?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "ensure-logrotate-activated"
                },
                "creationTimestamp": "2025-02-13T15:42:05Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-ensure-logrotate-activated",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354025",
                "uid": "e14e23d5-9580-42c1-99c0-ee23541704bb"
            },
            "rationale": "Log files that are not properly rotated run the risk of growing so large that they fill up the /var/log partition. Valuable logging information could be lost if the /var/log partition becomes full.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable ATM Support\nThe Asynchronous Transfer Mode (ATM) is a protocol operating on network, data link, and physical layers, based on virtual circuits and virtual paths. To configure the system to prevent the atm kernel module from being loaded, add the following line to the file /etc/modprobe.d/atm.conf :\n\ninstall atm /bin/false",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_atm_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the atm kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r atm /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-atm-disabled"
                },
                "creationTimestamp": "2025-02-13T15:41:51Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-atm-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353479",
                "uid": "9a1477cb-0824-485c-8ca6-340fe9871d81"
            },
            "rationale": "Disabling ATM protects the system against exploitation of any flaws in its implementation.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Bluetooth Kernel Module\nThe kernel's module loading system can be configured to prevent loading of the Bluetooth module. Add the following to the appropriate /etc/modprobe.d configuration file to prevent the loading of the Bluetooth module:\n\ninstall bluetooth /bin/true",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_bluetooth_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the bluetooth kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r bluetooth /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-bluetooth-disabled"
                },
                "creationTimestamp": "2025-02-13T15:42:06Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-bluetooth-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354088",
                "uid": "a5679c6b-a501-4042-b7b5-f194dea08397"
            },
            "rationale": "If Bluetooth functionality must be disabled, preventing the kernel from loading the kernel module provides an additional safeguard against its activation.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable CAN Support\nThe Controller Area Network (CAN) is a serial communications protocol which was initially developed for automotive and is now also used in marine, industrial, and medical applications. To configure the system to prevent the can kernel module from being loaded, add the following line to the file /etc/modprobe.d/can.conf :\n\ninstall can /bin/false",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_can_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the can kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r can /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-can-disabled"
                },
                "creationTimestamp": "2025-02-13T15:41:50Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-can-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353445",
                "uid": "4ee5b3c2-d33c-427b-a85a-e3fc2f85dc11"
            },
            "rationale": "Disabling CAN protects the system against exploitation of any flaws in its implementation.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel cfg80211 Module\nTo configure the system to prevent the cfg80211 kernel module from being loaded, add the following line to the file /etc/modprobe.d/cfg80211.conf :\n\ninstall cfg80211 /bin/false",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_cfg80211_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the cfg80211 kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r cfg80211 /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-cfg80211-disabled"
                },
                "creationTimestamp": "2025-02-13T15:42:05Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-cfg80211-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354039",
                "uid": "bc0dda2c-2349-4b97-b74a-95f438f7161d"
            },
            "rationale": "If Wireless functionality must be disabled, preventing the kernel from loading the kernel module provides an additional safeguard against its activation.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Mounting of cramfs\nTo configure the system to prevent the cramfs kernel module from being loaded, add the following line to the file /etc/modprobe.d/cramfs.conf :\n\ninstall cramfs /bin/false\n\nThis effectively prevents usage of this uncommon filesystem. The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_cramfs_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the cramfs kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r cramfs /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-cramfs-disabled"
                },
                "creationTimestamp": "2025-02-13T15:42:03Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-cramfs-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353954",
                "uid": "53eea6cb-d1b1-44c5-b2c2-61df89664c07"
            },
            "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the server.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable IEEE 1394 (FireWire) Support\nThe IEEE 1394 (FireWire) is a serial bus standard for high-speed real-time communication. To configure the system to prevent the firewire-core kernel module from being loaded, add the following line to the file /etc/modprobe.d/firewire-core.conf :\n\ninstall firewire-core /bin/false",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_firewire-core_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the firewire-core kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r firewire-core /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-firewire-core-disabled"
                },
                "creationTimestamp": "2025-02-13T15:41:52Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-firewire-core-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353538",
                "uid": "f8db36e5-3fd1-47b2-b5c1-e1509f033a59"
            },
            "rationale": "Disabling FireWire protects the system against exploitation of any flaws in its implementation.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Mounting of freevxfs\nTo configure the system to prevent the freevxfs kernel module from being loaded, add the following line to the file /etc/modprobe.d/freevxfs.conf :\n\ninstall freevxfs /bin/false\n\nThis effectively prevents usage of this uncommon filesystem.",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_freevxfs_disabled",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-freevxfs-disabled"
                },
                "creationTimestamp": "2025-02-13T15:41:53Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-freevxfs-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353576",
                "uid": "af593cfc-d79b-4662-9f53-8a8077e0e5e1"
            },
            "rationale": "Linux kernel modules which implement filesystems that are not needed by the local system should be disabled.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Mounting of hfs\nTo configure the system to prevent the hfs kernel module from being loaded, add the following line to the file /etc/modprobe.d/hfs.conf :\n\ninstall hfs /bin/false\n\nThis effectively prevents usage of this uncommon filesystem.",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_hfs_disabled",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-hfs-disabled"
                },
                "creationTimestamp": "2025-02-13T15:41:56Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-hfs-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353658",
                "uid": "9a5e5960-05f0-4161-a10d-ebd81d7fc7bc"
            },
            "rationale": "Linux kernel modules which implement filesystems that are not needed by the local system should be disabled.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Mounting of hfsplus\nTo configure the system to prevent the hfsplus kernel module from being loaded, add the following line to the file /etc/modprobe.d/hfsplus.conf :\n\ninstall hfsplus /bin/false\n\nThis effectively prevents usage of this uncommon filesystem.",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_hfsplus_disabled",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-hfsplus-disabled"
                },
                "creationTimestamp": "2025-02-13T15:41:57Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-hfsplus-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353721",
                "uid": "ace06ff4-58e3-47b5-9444-531305db6b3d"
            },
            "rationale": "Linux kernel modules which implement filesystems that are not needed by the local system should be disabled.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel iwlmvm Module\nTo configure the system to prevent the iwlmvm kernel module from being loaded, add the following line to the file /etc/modprobe.d/iwlmvm.conf :\n\ninstall iwlmvm /bin/false",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_iwlmvm_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the iwlmvm kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r iwlmvm /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-iwlmvm-disabled"
                },
                "creationTimestamp": "2025-02-13T15:42:00Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-iwlmvm-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353837",
                "uid": "5b25b3c7-f95b-41f7-930f-cce71a25e169"
            },
            "rationale": "If Wireless functionality must be disabled, preventing the kernel from loading the kernel module provides an additional safeguard against its activation.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel iwlwifi Module\nTo configure the system to prevent the iwlwifi kernel module from being loaded, add the following line to the file /etc/modprobe.d/iwlwifi.conf :\n\ninstall iwlwifi /bin/false",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_iwlwifi_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the iwlwifi kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r iwlwifi /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-iwlwifi-disabled"
                },
                "creationTimestamp": "2025-02-13T15:42:07Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-iwlwifi-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354131",
                "uid": "9fb831f0-c276-4bf3-ab6b-9dcbbedcecad"
            },
            "rationale": "If Wireless functionality must be disabled, preventing the kernel from loading the kernel module provides an additional safeguard against its activation.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Mounting of jffs2\nTo configure the system to prevent the jffs2 kernel module from being loaded, add the following line to the file /etc/modprobe.d/jffs2.conf :\n\ninstall jffs2 /bin/false\n\nThis effectively prevents usage of this uncommon filesystem.",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_jffs2_disabled",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-jffs2-disabled"
                },
                "creationTimestamp": "2025-02-13T15:42:07Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-jffs2-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354111",
                "uid": "6fc19655-d18d-47e0-b4c5-a64debeff061"
            },
            "rationale": "Linux kernel modules which implement filesystems that are not needed by the local system should be disabled.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel mac80211 Module\nTo configure the system to prevent the mac80211 kernel module from being loaded, add the following line to the file /etc/modprobe.d/mac80211.conf :\n\ninstall mac80211 /bin/false",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_mac80211_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the mac80211 kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r mac80211 /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-mac80211-disabled"
                },
                "creationTimestamp": "2025-02-13T15:41:56Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-mac80211-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353655",
                "uid": "7089675e-b187-4d55-bc22-5ac84b9afe6e"
            },
            "rationale": "If Wireless functionality must be disabled, preventing the kernel from loading the kernel module provides an additional safeguard against its activation.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable SCTP Support\nThe Stream Control Transmission Protocol (SCTP) is a transport layer protocol, designed to support the idea of message-oriented communication, with several streams of messages within one connection. To configure the system to prevent the sctp kernel module from being loaded, add the following line to the file /etc/modprobe.d/sctp.conf :\n\ninstall sctp /bin/false",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_sctp_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the sctp kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r sctp /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-sctp-disabled"
                },
                "creationTimestamp": "2025-02-13T15:41:54Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-sctp-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353602",
                "uid": "644c44fa-6d92-4dde-871f-f117cc3f25dd"
            },
            "rationale": "Disabling SCTP protects the system against exploitation of any flaws in its implementation.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Mounting of squashfs\nTo configure the system to prevent the squashfs kernel module from being loaded, add the following line to the file /etc/modprobe.d/squashfs.conf :\n\ninstall squashfs /bin/false\n\nThis effectively prevents usage of this uncommon filesystem. The squashfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems (similar to cramfs ). A squashfs image can be used without having to first decompress the image.",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_squashfs_disabled",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-squashfs-disabled"
                },
                "creationTimestamp": "2025-02-13T15:42:01Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-squashfs-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353889",
                "uid": "9b73127a-883c-4f1e-9b7f-861dbc3576c0"
            },
            "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable TIPC Support\nThe Transparent Inter-Process Communication (TIPC) protocol is designed to provide communications between nodes in a cluster. To configure the system to prevent the tipc kernel module from being loaded, add the following line to the file /etc/modprobe.d/tipc.conf :\n\ninstall tipc /bin/false",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_tipc_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the tipc kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r tipc /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-tipc-disabled"
                },
                "creationTimestamp": "2025-02-13T15:42:04Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-tipc-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353986",
                "uid": "dcb164be-b18c-491e-bdc5-0695b2b44319"
            },
            "rationale": "Disabling TIPC protects the system against exploitation of any flaws in its implementation.",
            "severity": "low",
            "status": "FAIL",
            "warnings": [
                "This configuration baseline was created to deploy the base operating system for general purpose workloads. When the operating system is configured for certain purposes, such as a node in High Performance Computing cluster, it is expected that the tipc kernel module will be loaded."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Mounting of udf\nTo configure the system to prevent the udf kernel module from being loaded, add the following line to the file /etc/modprobe.d/udf.conf :\n\ninstall udf /bin/false\n\nThis effectively prevents usage of this uncommon filesystem. The udf filesystem type is the universal disk format used to implement the ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is neccessary to support writing DVDs and newer optical disc formats.",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_udf_disabled",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-udf-disabled"
                },
                "creationTimestamp": "2025-02-13T15:41:56Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-udf-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353676",
                "uid": "0198d5fb-5ba0-4251-b4f7-dd69a1d7815a"
            },
            "rationale": "Removing support for unneeded filesystem types reduces the local attack surface of the system.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Modprobe Loading of USB Storage Driver\nTo prevent USB storage devices from being used, configure the kernel module loading system to prevent automatic loading of the USB storage driver. To configure the system to prevent the usb-storage kernel module from being loaded, add the following line to the file /etc/modprobe.d/usb-storage.conf :\n\ninstall usb-storage /bin/false\n\nThis will prevent the modprobe program from loading the usb-storage module, but will not prevent an administrator (or another program) from using the insmod program to load the module manually.",
            "id": "xccdf_org.ssgproject.content_rule_kernel_module_usb-storage_disabled",
            "instructions": "\nIf the system is configured to prevent the loading of the usb-storage kernel module,\nit will contain lines inside any file in /etc/modprobe.d or the deprecated /etc/modprobe.conf.\nThese lines instruct the module loading system to run another program (such as /bin/false) upon a module install event.\n\nRun the following command to search for such lines in all files in /etc/modprobe.d and the deprecated /etc/modprobe.conf:\n$ grep -r usb-storage /etc/modprobe.conf /etc/modprobe.d\nIs it the case that no line is returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "kernel-module-usb-storage-disabled"
                },
                "creationTimestamp": "2025-02-13T15:42:07Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-kernel-module-usb-storage-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354114",
                "uid": "acf17967-adc2-4818-8038-343fa999614a"
            },
            "rationale": "USB storage devices such as thumb drives can be used to introduce malicious software.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Direct root Logins Not Allowed\nTo further limit access to the root account, administrators can disable root logins at the console by editing the /etc/securetty file. This file lists all devices the root user is allowed to login to. If the file does not exist at all, the root user can login through any communication device on the system, whether via the console or via a raw network interface. This is dangerous as user can login to the system as root via Telnet, which sends the password in plain text over the network. By default, Red Hat Enterprise Linux CoreOS 4's /etc/securetty file only allows the root user to login at the console physically attached to the system. To prevent root from logging in, remove the contents of this file. To prevent direct root logins, remove the contents of this file by typing the following command:\n\n$ sudo echo \u003e /etc/securetty",
            "id": "xccdf_org.ssgproject.content_rule_no_direct_root_logins",
            "instructions": "To ensure root may not directly login to the system over physical consoles,\nrun the following command:\ncat /etc/securetty\nIf any output is returned, this is a finding.\nIs it the case that the /etc/securetty file is not empty?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "no-direct-root-logins"
                },
                "creationTimestamp": "2025-02-13T15:41:59Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-no-direct-root-logins",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353797",
                "uid": "a2b224c1-f1d8-4b20-9e1a-9a11d13bdd58"
            },
            "rationale": "Disabling direct root logins ensures proper accountability and multifactor authentication to privileged accounts. Users will first login, then escalate to privileged (root) access via su / sudo. This is required for FISMA Low and FISMA Moderate systems.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "This rule only checks the /etc/securetty file existence and its content. If you need to restrict user access using the /etc/securetty file, make sure the pam_securetty.so PAM module is properly enabled in relevant PAM files."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Prevent Login to Accounts With Empty Password\nIf an account is configured for password authentication but does not have an assigned password, it may be possible to log into the account without authentication. Remove any instances of the nullok in /etc/pam.d/system-auth and /etc/pam.d/password-auth to prevent logins with empty passwords.",
            "id": "xccdf_org.ssgproject.content_rule_no_empty_passwords",
            "instructions": "To verify that null passwords cannot be used, run the following command:\n\n$ grep nullok /etc/pam.d/system-auth /etc/pam.d/password-auth\n\nIf this produces any output, it may be possible to log into accounts\nwith empty passwords. Remove any instances of the nullok option to\nprevent logins with empty passwords.\nIs it the case that NULL passwords can be used?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "no-empty-passwords"
                },
                "creationTimestamp": "2025-02-13T15:41:52Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "high",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-no-empty-passwords",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353517",
                "uid": "3b5186a8-1efc-4e32-9d4d-c36bf1331461"
            },
            "rationale": "If an account has an empty password, anyone could log in and run commands with the privileges of that account. Accounts with empty passwords should never be used in operational environments.",
            "severity": "high",
            "status": "FAIL",
            "warnings": [
                "If the system relies on authselect tool to manage PAM settings, the remediation will also use authselect tool. However, if any manual modification was made in PAM files, the authselect integrity check will fail and the remediation will be aborted in order to preserve intentional changes. In this case, an informative message will be shown in the remediation report. Note that this rule is not applicable for systems running within a container. Having user with empty password within a container is not considered a risk, because it should not be possible to directly login into a container anyway."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Prevent user from disabling the screen lock\nThe tmux terminal multiplexer is used to implement automatic session locking. It should not be listed in /etc/shells.",
            "id": "xccdf_org.ssgproject.content_rule_no_tmux_in_shells",
            "instructions": "To verify that tmux is not listed as allowed shell on the system\nrun the following command:\n$ grep 'tmux$' /etc/shells\nThe output should be empty.\nIs it the case that tmux is listed in /etc/shells?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "no-tmux-in-shells"
                },
                "creationTimestamp": "2025-02-13T15:41:58Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-no-tmux-in-shells",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353754",
                "uid": "405204c5-a2d8-41e0-a6a2-6e6b01c4b5fc"
            },
            "rationale": "Not listing tmux among permitted shells prevents malicious program running as user from lowering security by disabling the screen lock.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Install usbguard Package\nThe usbguard package can be installed with the following manifest:\n\n---\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n labels:\n   machineconfiguration.openshift.io/role: master\n name: 75-master-usbguard-install\nspec:\n config:\n   ignition:\n     version: 3.1.0\n extensions:\n   - usbguard\n\nThis will install the usbguard package in all the nodes labeled with the \"master\" role.\n\nNote that this needs to be done for each MachineConfigPool\n\nFor more information on how to configure nodes with the Machine Config Operator see the relevant documentation ( https://docs.openshift.com/container-platform/4.6/post_installation_configuration/machine-configuration-tasks.html ).",
            "id": "xccdf_org.ssgproject.content_rule_package_usbguard_installed",
            "instructions": "Run the following command to determine if the usbguard package is installed: $ rpm -q usbguard\nIs it the case that the package is not installed?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "package-usbguard-installed"
                },
                "creationTimestamp": "2025-02-13T15:42:04Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-package-usbguard-installed",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354014",
                "uid": "3dee1d04-113e-4ff6-9486-36b4001fda1e"
            },
            "rationale": "usbguard is a software framework that helps to protect against rogue USB devices by implementing basic whitelisting/blacklisting capabilities based on USB device attributes.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable debug-shell SystemD Service\nSystemD's debug-shell service is intended to diagnose SystemD related boot issues with various systemctl commands. Once enabled and following a system reboot, the root shell will be available on tty9 which is access by pressing CTRL-ALT-F9. The debug-shell service should only be used for SystemD related issues and should otherwise be disabled.\n\nBy default, the debug-shell SystemD service is already disabled. The debug-shell service can be disabled with the following manifest:\n\n---\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n labels:\n   machineconfiguration.openshift.io/role: master\n name: 75-master-debug-shell-disable\nspec:\n config:\n   ignition:\n     version: 3.1.0\n   systemd:\n     units:\n     - name: debug-shell.service\n       enabled: false\n       mask: true\n     - name: debug-shell.socket\n       enabled: false\n       mask: true\n\nThis will disable the debug-shell service in all the nodes labeled with the \"master\" role.\n\nNote that this needs to be done for each MachineConfigPool\n\nFor more information on how to configure nodes with the Machine Config Operator see the relevant documentation ( https://docs.openshift.com/container-platform/4.6/post_installation_configuration/machine-configuration-tasks.html ).",
            "id": "xccdf_org.ssgproject.content_rule_service_debug-shell_disabled",
            "instructions": "To check that the debug-shell service is disabled in system boot configuration,\nYou'll need to log into a node in the cluster.\nAs a user with administrator privileges, log into a node in the relevant pool:\n\n$ oc debug node/$NODE_NAME\n\nAt the sh-4.4# prompt, run:\n\n# chroot /host\n\n\nSubsequently,run the following command:\n$ sudo systemctl is-enabled debug-shell\nOutput should indicate the debug-shell service has either not been installed,\nor has been disabled at all runlevels, as shown in the example below:\n$ sudo systemctl is-enabled debug-shell disabled\n\nRun the following command to verify debug-shell is not active (i.e. not running) through current runtime configuration:\n$ sudo systemctl is-active debug-shell\n\nIf the service is not running the command will return the following output:\ninactive\n\nThe service will also be masked, to check that the debug-shell is masked, run the following command:\n$ sudo systemctl show debug-shell | grep \"LoadState\\|UnitFileState\"\n\nIf the service is masked the command will return the following outputs:\n\nLoadState=masked\n\nUnitFileState=masked\nIs it the case that the \"debug-shell\" is loaded and not masked?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "service-debug-shell-disabled"
                },
                "creationTimestamp": "2025-02-13T15:42:06Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-service-debug-shell-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354074",
                "uid": "5965a6d3-2332-4cb9-8e87-e6459a9f1918"
            },
            "rationale": "This prevents attackers with physical access from trivially bypassing security on the machine through valid troubleshooting configurations and gaining root access when the system is rebooted.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Enable the USBGuard Service\nThe USBGuard service should be enabled. The usbguard service can be enabled with the following manifest:\n\n---\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\n labels:\n   machineconfiguration.openshift.io/role: master\n name: 75-master-usbguard-enable\nspec:\n config:\n   ignition:\n     version: 3.1.0\n   systemd:\n     units:\n     - name: usbguard.service\n       enabled: true\n\nThis will enable the usbguard service in all the nodes labeled with the \"master\" role.\n\nNote that this needs to be done for each MachineConfigPool\n\nFor more information on how to configure nodes with the Machine Config Operator see the relevant documentation ( https://docs.openshift.com/container-platform/4.6/post_installation_configuration/machine-configuration-tasks.html ).",
            "id": "xccdf_org.ssgproject.content_rule_service_usbguard_enabled",
            "instructions": "\nAs a user with administrator privileges, log into a node in the relevant pool:\n\n$ oc debug node/$NODE_NAME\n\nAt the sh-4.4# prompt, run:\n\n# chroot /host\n\n\nRun the following command to determine the current status of the\nusbguard service:\n$ sudo systemctl is-active usbguard\nIf the service is running, it should return the following: active\nIs it the case that the service is not enabled?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "service-usbguard-enabled"
                },
                "creationTimestamp": "2025-02-13T15:41:55Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-service-usbguard-enabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353648",
                "uid": "0c0fb493-751f-4e23-b340-d8df2445091d"
            },
            "rationale": "The usbguard service must be running in order to enforce the USB device authorization policy for all USB devices.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable SSH Support for .rhosts Files\nSSH can emulate the behavior of the obsolete rsh command in allowing users to enable insecure access to their accounts via.rhosts files.\n\nThe default SSH configuration disables support for.rhosts. The appropriate configuration is used if no value is set for IgnoreRhosts.\n\nTo explicitly disable support for .rhosts files, add or correct the following line in /etc/ssh/sshd_config :\n\nIgnoreRhosts yes",
            "id": "xccdf_org.ssgproject.content_rule_sshd_disable_rhosts",
            "instructions": "To determine how the SSH daemon's IgnoreRhosts option is set, run the following command:\n\n$ sudo grep -i IgnoreRhosts /etc/ssh/sshd_config\n\nIf a line indicating yes is returned, then the required value is set.\n\nIs it the case that the required value is not set?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sshd-disable-rhosts"
                },
                "creationTimestamp": "2025-02-13T15:41:53Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sshd-disable-rhosts",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353556",
                "uid": "13c495ba-76c8-42e1-8346-c3e92648fc00"
            },
            "rationale": "SSH trust relationships mean a compromise on one host can allow an attacker to move trivially to other hosts.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Set SSH Client Alive Interval\nSSH allows administrators to set a network responsiveness timeout interval. After this interval has passed, the unresponsive client will be automatically logged out.\n\nTo set this timeout interval, edit the following line in /etc/ssh/sshd_config as follows:\n\nClientAliveInterval *300*\n\nThe timeout *interval* is given in seconds. For example, have a timeout of 10 minutes, set *interval* to 600.\n\nIf a shorter timeout has already been set for the login shell, that value will preempt any SSH setting made in /etc/ssh/sshd_config. Keep in mind that some processes may stop SSH from correctly detecting that the user is idle.",
            "id": "xccdf_org.ssgproject.content_rule_sshd_set_idle_timeout",
            "instructions": "Run the following command to see what the timeout interval is:\n$ sudo grep ClientAliveInterval /etc/ssh/sshd_config\nIf properly configured, the output should be:\nClientAliveInterval\nIs it the case that it is commented out or not configured properly?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sshd-set-idle-timeout"
                },
                "creationTimestamp": "2025-02-13T15:41:59Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-has-value": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sshd-set-idle-timeout",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353801",
                "uid": "9a91c6bb-2e4b-4e46-b2f9-a30197f411aa"
            },
            "rationale": "Terminating an idle ssh session within a short time period reduces the window of opportunity for unauthorized personnel to take control of a management session enabled on the console or console port that has been let unattended.",
            "severity": "medium",
            "status": "FAIL",
            "valuesUsed": [
                "sshd-idle-timeout-value"
            ],
            "warnings": [
                "SSH disconnecting unresponsive clients will not have desired effect without also configuring ClientAliveCountMax in the SSH service configuration.",
                "Following conditions may prevent the SSH session to time out:\n\n* Remote processes on the remote machine generates output. As the output has to be transferred over the network to the client, the timeout is reset every time such transfer happens.\n* Any scp or sftp activity by the same user to the host resets the timeout."
            ]
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Set SSH Client Alive Count Max\nThe SSH server sends at most ClientAliveCountMax messages during a SSH session and waits for a response from the SSH client. The option ClientAliveInterval configures timeout after each ClientAliveCountMax message. If the SSH server does not receive a response from the client, then the connection is considered unresponsive and terminated. For SSH earlier than v8.2, a ClientAliveCountMax value of 0 causes a timeout precisely when the ClientAliveInterval is set. Starting with v8.2, a value of 0 disables the timeout functionality completely. If the option is set to a number greater than 0 , then the session will be disconnected after ClientAliveInterval * ClientAliveCountMax seconds without receiving a keep alive message.",
            "id": "xccdf_org.ssgproject.content_rule_sshd_set_keepalive",
            "instructions": "To ensure ClientAliveInterval is set correctly, run the following command:\n$ sudo grep ClientAliveCountMax /etc/ssh/sshd_config\nIf properly configured, the output should be:\nClientAliveCountMax\nFor SSH earlier than v8.2, a ClientAliveCountMax value of 0 causes a timeout precisely when\nthe ClientAliveInterval is set.  Starting with v8.2, a value of 0 disables the timeout\nfunctionality completely.\nIf the option is set to a number greater than 0, then the session will be disconnected after\nClientAliveInterval * ClientAliveCountMax seconds without receiving a keep alive message.\nIs it the case that it is commented out or not configured properly?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sshd-set-keepalive"
                },
                "creationTimestamp": "2025-02-13T15:41:56Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sshd-set-keepalive",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353680",
                "uid": "fbf5f043-3b99-41a1-ad70-4a5cf4700e13"
            },
            "rationale": "This ensures a user login will be terminated as soon as the ClientAliveInterval is reached.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable storing core dumps\nTo set the runtime status of the kernel.core_pattern kernel parameter, run the following command:\n\n$ sudo sysctl -w kernel.core_pattern=|/bin/false\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nkernel.core_pattern = |/bin/false",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_core_pattern",
            "instructions": "The runtime status of the kernel.core_pattern kernel parameter can be queried\nby running the following command:\n$ sysctl kernel.core_pattern\n|/bin/false.\n\nIs it the case that the returned line does not have a value of \"|/bin/false\", or a line is not\nreturned and the need for core dumps is not documented with the Information\nSystem Security Officer (ISSO) as an operational requirement?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-kernel-core-pattern"
                },
                "creationTimestamp": "2025-02-13T15:42:06Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-kernel-core-pattern",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354079",
                "uid": "87ee9a54-5678-437e-acbd-810cfc31db52"
            },
            "rationale": "A core dump includes a memory image taken at the time the operating system terminates an application. The memory image could contain sensitive data and is generally useful only for developers trying to debug problems.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Restrict Access to Kernel Message Buffer\nTo set the runtime status of the kernel.dmesg_restrict kernel parameter, run the following command:\n\n$ sudo sysctl -w kernel.dmesg_restrict=1\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nkernel.dmesg_restrict = 1",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_dmesg_restrict",
            "instructions": "The runtime status of the kernel.dmesg_restrict kernel parameter can be queried\nby running the following command:\n$ sysctl kernel.dmesg_restrict\n1.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-kernel-dmesg-restrict"
                },
                "creationTimestamp": "2025-02-13T15:42:08Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-kernel-dmesg-restrict",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354170",
                "uid": "28f0b9a1-b03d-400f-8393-68f112d28394"
            },
            "rationale": "Unprivileged access to the kernel syslog can expose sensitive kernel address information.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel Image Loading\nTo set the runtime status of the kernel.kexec_load_disabled kernel parameter, run the following command:\n\n$ sudo sysctl -w kernel.kexec_load_disabled=1\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nkernel.kexec_load_disabled = 1",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_kexec_load_disabled",
            "instructions": "The runtime status of the kernel.kexec_load_disabled kernel parameter can be queried\nby running the following command:\n$ sysctl kernel.kexec_load_disabled\n1.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-kernel-kexec-load-disabled"
                },
                "creationTimestamp": "2025-02-13T15:42:07Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-kernel-kexec-load-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354103",
                "uid": "15ccc2cd-32c1-4759-9f1f-128dd9563169"
            },
            "rationale": "Disabling kexec_load allows greater control of the kernel memory. It makes it impossible to load another kernel image after it has been disabled.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disallow kernel profiling by unprivileged users\nTo set the runtime status of the kernel.perf_event_paranoid kernel parameter, run the following command:\n\n$ sudo sysctl -w kernel.perf_event_paranoid=2\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nkernel.perf_event_paranoid = 2",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_perf_event_paranoid",
            "instructions": "The runtime status of the kernel.perf_event_paranoid kernel parameter can be queried\nby running the following command:\n$ sysctl kernel.perf_event_paranoid\n2.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-kernel-perf-event-paranoid"
                },
                "creationTimestamp": "2025-02-13T15:42:08Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "low",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-kernel-perf-event-paranoid",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354174",
                "uid": "8f05fdbd-88ac-4e11-a0aa-a2ad5a69314f"
            },
            "rationale": "Kernel profiling can reveal sensitive information about kernel behaviour.",
            "severity": "low",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Access to Network bpf() Syscall From Unprivileged Processes\nTo set the runtime status of the kernel.unprivileged_bpf_disabled kernel parameter, run the following command:\n\n$ sudo sysctl -w kernel.unprivileged_bpf_disabled=1\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nkernel.unprivileged_bpf_disabled = 1",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_unprivileged_bpf_disabled",
            "instructions": "The runtime status of the kernel.unprivileged_bpf_disabled kernel parameter can be queried\nby running the following command:\n$ sysctl kernel.unprivileged_bpf_disabled\n1.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-kernel-unprivileged-bpf-disabled"
                },
                "creationTimestamp": "2025-02-13T15:41:55Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-kernel-unprivileged-bpf-disabled",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353633",
                "uid": "49b207fd-d81b-4a62-9071-f2607ddfe7fd"
            },
            "rationale": "Loading and accessing the packet filters programs and maps using the bpf() syscall has the potential of revealing sensitive information about the kernel state.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Restrict usage of ptrace to descendant processes\nTo set the runtime status of the kernel.yama.ptrace_scope kernel parameter, run the following command:\n\n$ sudo sysctl -w kernel.yama.ptrace_scope=1\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nkernel.yama.ptrace_scope = 1",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_kernel_yama_ptrace_scope",
            "instructions": "The runtime status of the kernel.yama.ptrace_scope kernel parameter can be queried\nby running the following command:\n$ sysctl kernel.yama.ptrace_scope\n1.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-kernel-yama-ptrace-scope"
                },
                "creationTimestamp": "2025-02-13T15:41:49Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-kernel-yama-ptrace-scope",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353410",
                "uid": "f289cb29-9553-4f1f-b925-3696a2a4a4f7"
            },
            "rationale": "Unrestricted usage of ptrace allows compromised binaries to run ptrace on another processes of the user. Like this, the attacker can steal sensitive information from the target processes (e.g. SSH sessions, web browser, ...) without any additional assistance from the user (i.e. without resorting to phishing).",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Harden the operation of the BPF just-in-time compiler\nTo set the runtime status of the net.core.bpf_jit_harden kernel parameter, run the following command:\n\n$ sudo sysctl -w net.core.bpf_jit_harden=2\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.core.bpf_jit_harden = 2",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_core_bpf_jit_harden",
            "instructions": "The runtime status of the net.core.bpf_jit_harden kernel parameter can be queried\nby running the following command:\n$ sysctl net.core.bpf_jit_harden\n2.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-core-bpf-jit-harden"
                },
                "creationTimestamp": "2025-02-13T15:42:05Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-core-bpf-jit-harden",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354043",
                "uid": "58b8b8b2-703f-4112-b33d-7ee9120afbb7"
            },
            "rationale": "When hardened, the extended Berkeley Packet Filter just-in-time compiler will randomize any kernel addresses in the BPF programs and maps, and will not expose the JIT addresses in /proc/kallsyms.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Accepting ICMP Redirects for All IPv4 Interfaces\nTo set the runtime status of the net.ipv4.conf.all.accept_redirects kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.conf.all.accept_redirects=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.conf.all.accept_redirects = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_accept_redirects",
            "instructions": "The runtime status of the net.ipv4.conf.all.accept_redirects kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.conf.all.accept_redirects\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-conf-all-accept-redirects"
                },
                "creationTimestamp": "2025-02-13T15:41:53Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-conf-all-accept-redirects",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353569",
                "uid": "bd7cf0cf-1a2a-4860-a414-dc54fb954531"
            },
            "rationale": "ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a particular destination. These messages modify the host's route table and are unauthenticated. An illicit ICMP redirect message could result in a man-in-the-middle attack.\n\nThis feature of the IPv4 protocol has few legitimate uses. It should be disabled unless absolutely required.\"",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv4 Interfaces\nTo set the runtime status of the net.ipv4.conf.all.accept_source_route kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.conf.all.accept_source_route=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.conf.all.accept_source_route = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_accept_source_route",
            "instructions": "The runtime status of the net.ipv4.conf.all.accept_source_route kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.conf.all.accept_source_route\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-conf-all-accept-source-route"
                },
                "creationTimestamp": "2025-02-13T15:41:48Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-conf-all-accept-source-route",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353381",
                "uid": "6aefe4ea-d70a-4829-93f0-d18e1258f14c"
            },
            "rationale": "Source-routed packets allow the source of the packet to suggest routers forward the packet along a different path than configured on the router, which can be used to bypass network security measures. This requirement applies only to the forwarding of source-routerd traffic, such as when IPv4 forwarding is enabled and the system is functioning as a router.\n\nAccepting source-routed packets in the IPv4 protocol has few legitimate uses. It should be disabled unless it is absolutely required.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Enable Kernel Parameter to Log Martian Packets on all IPv4 Interfaces\nTo set the runtime status of the net.ipv4.conf.all.log_martians kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.conf.all.log_martians=1\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.conf.all.log_martians = 1",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_log_martians",
            "instructions": "The runtime status of the net.ipv4.conf.all.log_martians kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.conf.all.log_martians\n1.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-conf-all-log-martians"
                },
                "creationTimestamp": "2025-02-13T15:42:03Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "unknown",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-conf-all-log-martians",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353974",
                "uid": "3637471f-65bf-47e4-b955-a45e4ab0c7ed"
            },
            "rationale": "The presence of \"martian\" packets (which have impossible addresses) as well as spoofed packets, source-routed packets, and redirects could be a sign of nefarious network activity. Logging these packets enables this activity to be detected.",
            "severity": "unknown",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces\nTo set the runtime status of the net.ipv4.conf.all.rp_filter kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.conf.all.rp_filter=1\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.conf.all.rp_filter = 1",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_rp_filter",
            "instructions": "The runtime status of the net.ipv4.conf.all.rp_filter parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.conf.all.rp_filter\nThe output of the command should indicate either:\nnet.ipv4.conf.all.rp_filter = 1\nor:\nnet.ipv4.conf.all.rp_filter = 2\nThe output of the command should not indicate:\nnet.ipv4.conf.all.rp_filter = 0\n\nThe preferable way how to assure the runtime compliance is to have\ncorrect persistent configuration, and rebooting the system.\n\nThe persistent sysctl parameter configuration is performed by specifying the appropriate\nassignment in any file located in the /etc/sysctl.d directory.\nVerify that there is not any existing incorrect configuration by executing the following command:\n$ grep -r '^\\s*net.ipv4.conf.all.rp_filter\\s*=' /etc/sysctl.conf /etc/sysctl.d\nThe command should not find any assignments other than:\nnet.ipv4.conf.all.rp_filter = 1\nor:\nnet.ipv4.conf.all.rp_filter = 2\n\nConflicting assignments are not allowed.\nIs it the case that the net.ipv4.conf.all.rp_filter is not set to 1 or 2 or is configured to be 0?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-conf-all-rp-filter"
                },
                "creationTimestamp": "2025-02-13T15:42:02Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-conf-all-rp-filter",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353927",
                "uid": "5e8c07a8-d4a0-4f8c-8591-a48fbf73b12d"
            },
            "rationale": "Enabling reverse path filtering drops packets with source addresses that should not have been able to be received on the interface they were received on. It should not be used on systems which are routers for complicated networks, but is helpful for end hosts and routers serving small networks.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel Parameter for Accepting Secure ICMP Redirects on all IPv4 Interfaces\nTo set the runtime status of the net.ipv4.conf.all.secure_redirects kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.conf.all.secure_redirects=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.conf.all.secure_redirects = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_secure_redirects",
            "instructions": "The runtime status of the net.ipv4.conf.all.secure_redirects kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.conf.all.secure_redirects\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-conf-all-secure-redirects"
                },
                "creationTimestamp": "2025-02-13T15:41:50Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-conf-all-secure-redirects",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353424",
                "uid": "a31fbc47-2326-4b03-a455-3107c8b879c9"
            },
            "rationale": "Accepting \"secure\" ICMP redirects (from those gateways listed as default gateways) has few legitimate uses. It should be disabled unless it is absolutely required.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces\nTo set the runtime status of the net.ipv4.conf.all.send_redirects kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.conf.all.send_redirects=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.conf.all.send_redirects = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_send_redirects",
            "instructions": "The runtime status of the net.ipv4.conf.all.send_redirects kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.conf.all.send_redirects\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-conf-all-send-redirects"
                },
                "creationTimestamp": "2025-02-13T15:41:52Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-conf-all-send-redirects",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353505",
                "uid": "be40d338-83fb-4872-bc92-7cb0e1f18bef"
            },
            "rationale": "ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a particular destination. These messages contain information from the system's route table possibly revealing portions of the network topology.\n\nThe ability to send ICMP redirects is only appropriate for systems acting as routers.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv4 Interfaces\nTo set the runtime status of the net.ipv4.conf.default.accept_redirects kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.conf.default.accept_redirects=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.conf.default.accept_redirects = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_accept_redirects",
            "instructions": "The runtime status of the net.ipv4.conf.default.accept_redirects kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.conf.default.accept_redirects\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-conf-default-accept-redirects"
                },
                "creationTimestamp": "2025-02-13T15:41:57Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-conf-default-accept-redirects",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353698",
                "uid": "55103267-f23a-4093-b8eb-5346bc753f5a"
            },
            "rationale": "ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a particular destination. These messages modify the host's route table and are unauthenticated. An illicit ICMP redirect message could result in a man-in-the-middle attack.\n\nThis feature of the IPv4 protocol has few legitimate uses. It should be disabled unless absolutely required.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Enable Kernel Paremeter to Log Martian Packets on all IPv4 Interfaces by Default\nTo set the runtime status of the net.ipv4.conf.default.log_martians kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.conf.default.log_martians=1\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.conf.default.log_martians = 1",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_log_martians",
            "instructions": "The runtime status of the net.ipv4.conf.default.log_martians kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.conf.default.log_martians\n1.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-conf-default-log-martians"
                },
                "creationTimestamp": "2025-02-13T15:41:54Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "unknown",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-conf-default-log-martians",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353597",
                "uid": "5f89ca35-610d-4ee3-bb3c-9aaabe50997f"
            },
            "rationale": "The presence of \"martian\" packets (which have impossible addresses) as well as spoofed packets, source-routed packets, and redirects could be a sign of nefarious network activity. Logging these packets enables this activity to be detected.",
            "severity": "unknown",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces by Default\nTo set the runtime status of the net.ipv4.conf.default.rp_filter kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.conf.default.rp_filter=1\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.conf.default.rp_filter = 1",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_rp_filter",
            "instructions": "The runtime status of the net.ipv4.conf.default.rp_filter kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.conf.default.rp_filter\n1.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-conf-default-rp-filter"
                },
                "creationTimestamp": "2025-02-13T15:41:58Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-conf-default-rp-filter",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353757",
                "uid": "ce38ab4b-c1af-4597-be17-e9b25f4a5c1e"
            },
            "rationale": "Enabling reverse path filtering drops packets with source addresses that should not have been able to be received on the interface they were received on. It should not be used on systems which are routers for complicated networks, but is helpful for end hosts and routers serving small networks.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure Kernel Parameter for Accepting Secure Redirects By Default\nTo set the runtime status of the net.ipv4.conf.default.secure_redirects kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.conf.default.secure_redirects=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.conf.default.secure_redirects = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_secure_redirects",
            "instructions": "The runtime status of the net.ipv4.conf.default.secure_redirects kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.conf.default.secure_redirects\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-conf-default-secure-redirects"
                },
                "creationTimestamp": "2025-02-13T15:41:48Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-conf-default-secure-redirects",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353368",
                "uid": "99fe46dc-e404-430a-898d-4122b2cf9c95"
            },
            "rationale": "Accepting \"secure\" ICMP redirects (from those gateways listed as default gateways) has few legitimate uses. It should be disabled unless it is absolutely required.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces by Default\nTo set the runtime status of the net.ipv4.conf.default.send_redirects kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.conf.default.send_redirects=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.conf.default.send_redirects = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_send_redirects",
            "instructions": "The runtime status of the net.ipv4.conf.default.send_redirects kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.conf.default.send_redirects\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-conf-default-send-redirects"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-conf-default-send-redirects",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353298",
                "uid": "a9b118b0-87c0-4c8b-ba23-992c1dfb308c"
            },
            "rationale": "ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a particular destination. These messages contain information from the system's route table possibly revealing portions of the network topology.\n\nThe ability to send ICMP redirects is only appropriate for systems acting as routers.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Enable Kernel Parameter to Ignore ICMP Broadcast Echo Requests on IPv4 Interfaces\nTo set the runtime status of the net.ipv4.icmp_echo_ignore_broadcasts kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.icmp_echo_ignore_broadcasts = 1",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_echo_ignore_broadcasts",
            "instructions": "The runtime status of the net.ipv4.icmp_echo_ignore_broadcasts kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.icmp_echo_ignore_broadcasts\n1.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-icmp-echo-ignore-broadcasts"
                },
                "creationTimestamp": "2025-02-13T15:41:52Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-icmp-echo-ignore-broadcasts",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353534",
                "uid": "83f25afc-ac71-4318-8410-fd5f4241551b"
            },
            "rationale": "Responding to broadcast (ICMP) echoes facilitates network mapping and provides a vector for amplification attacks.\n\nIgnoring ICMP echo requests (pings) sent to broadcast or multicast addresses makes the system slightly more difficult to enumerate on the network.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Enable Kernel Parameter to Ignore Bogus ICMP Error Responses on IPv4 Interfaces\nTo set the runtime status of the net.ipv4.icmp_ignore_bogus_error_responses kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.icmp_ignore_bogus_error_responses = 1",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_ignore_bogus_error_responses",
            "instructions": "The runtime status of the net.ipv4.icmp_ignore_bogus_error_responses kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.icmp_ignore_bogus_error_responses\n1.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-icmp-ignore-bogus-error-responses"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "unknown",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-icmp-ignore-bogus-error-responses",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353318",
                "uid": "5c500f18-231b-420e-9da9-9057c1762e05"
            },
            "rationale": "Ignoring bogus ICMP error responses reduces log size, although some activity would not be logged.",
            "severity": "unknown",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Enable Kernel Parameter to Use TCP Syncookies on Network Interfaces\nTo set the runtime status of the net.ipv4.tcp_syncookies kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv4.tcp_syncookies=1\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv4.tcp_syncookies = 1",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_tcp_syncookies",
            "instructions": "The runtime status of the net.ipv4.tcp_syncookies kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv4.tcp_syncookies\n1.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv4-tcp-syncookies"
                },
                "creationTimestamp": "2025-02-13T15:41:59Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv4-tcp-syncookies",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353810",
                "uid": "8ece391b-17ff-4b37-b346-5ca41e96ae24"
            },
            "rationale": "A TCP SYN flood attack can cause a denial of service by filling a system's TCP connection table with connections in the SYN_RCVD state. Syncookies can be used to track a connection when a subsequent ACK is received, verifying the initiator is attempting a valid connection and is not a flood source. This feature is activated when a flood condition is detected, and enables the system to continue servicing valid connection requests.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Configure Accepting Router Advertisements on All IPv6 Interfaces\nTo set the runtime status of the net.ipv6.conf.all.accept_ra kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv6.conf.all.accept_ra=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv6.conf.all.accept_ra = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_ra",
            "instructions": "The runtime status of the net.ipv6.conf.all.accept_ra kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv6.conf.all.accept_ra\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv6-conf-all-accept-ra"
                },
                "creationTimestamp": "2025-02-13T15:41:57Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv6-conf-all-accept-ra",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353696",
                "uid": "59becec7-15f3-4602-b7cf-b5587925d0d5"
            },
            "rationale": "An illicit router advertisement message could result in a man-in-the-middle attack.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Accepting ICMP Redirects for All IPv6 Interfaces\nTo set the runtime status of the net.ipv6.conf.all.accept_redirects kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv6.conf.all.accept_redirects=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv6.conf.all.accept_redirects = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_redirects",
            "instructions": "The runtime status of the net.ipv6.conf.all.accept_redirects kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv6.conf.all.accept_redirects\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv6-conf-all-accept-redirects"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv6-conf-all-accept-redirects",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353313",
                "uid": "67db2d89-edca-482d-bc40-65040edb4d8b"
            },
            "rationale": "An illicit ICMP redirect message could result in a man-in-the-middle attack.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv6 Interfaces\nTo set the runtime status of the net.ipv6.conf.all.accept_source_route kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv6.conf.all.accept_source_route=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv6.conf.all.accept_source_route = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_source_route",
            "instructions": "The runtime status of the net.ipv6.conf.all.accept_source_route kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv6.conf.all.accept_source_route\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv6-conf-all-accept-source-route"
                },
                "creationTimestamp": "2025-02-13T15:42:05Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv6-conf-all-accept-source-route",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "354035",
                "uid": "e0d5cec8-f76c-4e32-9713-363050b56c7f"
            },
            "rationale": "Source-routed packets allow the source of the packet to suggest routers forward the packet along a different path than configured on the router, which can be used to bypass network security measures. This requirement applies only to the forwarding of source-routerd traffic, such as when IPv6 forwarding is enabled and the system is functioning as a router.\n\nAccepting source-routed packets in the IPv6 protocol has few legitimate uses. It should be disabled unless it is absolutely required.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Accepting Router Advertisements on all IPv6 Interfaces by Default\nTo set the runtime status of the net.ipv6.conf.default.accept_ra kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv6.conf.default.accept_ra=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv6.conf.default.accept_ra = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_ra",
            "instructions": "The runtime status of the net.ipv6.conf.default.accept_ra kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv6.conf.default.accept_ra\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv6-conf-default-accept-ra"
                },
                "creationTimestamp": "2025-02-13T15:42:03Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv6-conf-default-accept-ra",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353951",
                "uid": "6ccc501d-9151-48f3-8de5-e877e3131c72"
            },
            "rationale": "An illicit router advertisement message could result in a man-in-the-middle attack.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv6 Interfaces\nTo set the runtime status of the net.ipv6.conf.default.accept_redirects kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv6.conf.default.accept_redirects=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv6.conf.default.accept_redirects = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_redirects",
            "instructions": "The runtime status of the net.ipv6.conf.default.accept_redirects kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv6.conf.default.accept_redirects\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv6-conf-default-accept-redirects"
                },
                "creationTimestamp": "2025-02-13T15:41:47Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv6-conf-default-accept-redirects",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353282",
                "uid": "08eed238-d8a0-4b79-a1ce-8fb6c251b4f2"
            },
            "rationale": "An illicit ICMP redirect message could result in a man-in-the-middle attack.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Disable Kernel Parameter for Accepting Source-Routed Packets on IPv6 Interfaces by Default\nTo set the runtime status of the net.ipv6.conf.default.accept_source_route kernel parameter, run the following command:\n\n$ sudo sysctl -w net.ipv6.conf.default.accept_source_route=0\n\nTo make sure that the setting is persistent, add the following line to a file in the directory /etc/sysctl.d :\n\nnet.ipv6.conf.default.accept_source_route = 0",
            "id": "xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_source_route",
            "instructions": "The runtime status of the net.ipv6.conf.default.accept_source_route kernel parameter can be queried\nby running the following command:\n$ sysctl net.ipv6.conf.default.accept_source_route\n0.\n\nIs it the case that the correct value is not returned?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "sysctl-net-ipv6-conf-default-accept-source-route"
                },
                "creationTimestamp": "2025-02-13T15:41:56Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-sysctl-net-ipv6-conf-default-accept-source-route",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353673",
                "uid": "3df165f0-eff4-40e2-afdb-c88661aeb8d2"
            },
            "rationale": "Source-routed packets allow the source of the packet to suggest routers forward the packet along a different path than configured on the router, which can be used to bypass network security measures. This requirement applies only to the forwarding of source-routerd traffic, such as when IPv6 forwarding is enabled and the system is functioning as a router. Accepting source-routed packets in the IPv6 protocol has few legitimate uses. It should be disabled unless it is absolutely required.",
            "severity": "medium",
            "status": "FAIL"
        },
        {
            "apiVersion": "compliance.openshift.io/v1alpha1",
            "description": "Authorize Human Interface Devices and USB hubs in USBGuard daemon\nTo allow authorization of USB devices combining human interface device and hub capabilities by USBGuard daemon, add the line allow with-interface match-all { 03:*:* 09:00:* } to /etc/usbguard/rules.conf.",
            "id": "xccdf_org.ssgproject.content_rule_usbguard_allow_hid_and_hub",
            "instructions": "To verify that USB Human Interface Devices and hubs will be authorized by the USBGuard daemon,\nrun the following command:\n$ sudo grep allow /etc/usbguard/rules.conf\nThe output lines should include\nallow with-interface match-all { 03:*:* 09:00:* }\nIs it the case that USB devices of class 3 and 9:00 are not authorized?",
            "kind": "ComplianceCheckResult",
            "metadata": {
                "annotations": {
                    "compliance.openshift.io/last-scanned-timestamp": "2025-02-13T15:38:30Z",
                    "compliance.openshift.io/rule": "usbguard-allow-hid-and-hub"
                },
                "creationTimestamp": "2025-02-13T15:42:04Z",
                "generation": 1,
                "labels": {
                    "compliance.openshift.io/automated-remediation": "",
                    "compliance.openshift.io/check-severity": "medium",
                    "compliance.openshift.io/check-status": "FAIL",
                    "compliance.openshift.io/profile-guid": "eceb9af0-17d4-5c59-9b17-07cfd22a3ba1",
                    "compliance.openshift.io/scan-name": "rhcos4-moderate-master",
                    "compliance.openshift.io/suite": "test-scan-rhcos"
                },
                "name": "rhcos4-moderate-master-usbguard-allow-hid-and-hub",
                "namespace": "openshift-compliance",
                "ownerReferences": [
                    {
                        "apiVersion": "compliance.openshift.io/v1alpha1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ComplianceScan",
                        "name": "rhcos4-moderate-master",
                        "uid": "70b025ba-61ad-4b7a-89bf-0e22f5adc9d5"
                    }
                ],
                "resourceVersion": "353989",
                "uid": "b38c5169-36db-457a-a459-7d6af4d0362c"
            },
            "rationale": "Without allowing Human Interface Devices, it might not be possible to interact with the system. Without allowing hubs, it might not be possible to use any USB devices on the system.",
            "severity": "medium",
            "status": "FAIL",
            "warnings": [
                "This rule should be understood primarily as a convenience administration feature. This rule ensures that if the USBGuard default rules.conf file is present, it will alter it so that USB human interface devices and hubs are allowed. However, if the rules.conf file is altered by system administrator, the rule does not check if USB human interface devices and hubs are allowed. This assumes that an administrator modified the file with some purpose in mind."
            ]
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": ""
    }
}
